package com.esgc.RegulatoryReporting.DB.DBQueries;

import com.esgc.Utilities.DateTimeUtilities;
import com.esgc.Utilities.PortfolioUtilities;
import java.math.BigDecimal;
import java.math.RoundingMode;
import java.text.DecimalFormat;
import java.util.*;
import static com.esgc.Utilities.Database.DatabaseDriver.*;

public class RegulatoryReportingQueries {

    public int getNumberOfCompanies(String portfolioId) {
        return getPortfolioDetails(portfolioId).size();
    }

    public List<Map<String, Object>> getPortfolioDetails(String portfolioId) {
        String query = "select * from DF_PORTFOLIO where PORTFOLIO_ID='" + portfolioId + "'";
        return getQueryResultMap(query);
    }

    public List<Map<String, Object>> getReportingYearDetails(String portfolioId) {
        String query = "SELECT DISTINCT tt.portfolio_id --as \"portfolio_id\"\n" +
                ",sfdr_coverage, taxonomy_coverage\n" +
                ",reporting_year AS year\n" +
                "  , tt.as_of_date\n" +
                "FROM  (SELECT distinct portfolio_id\n" +
                ",rrs.bvd9_number orbis_id\n" +
                ",COUNT(DISTINCT(rrs.bvd9_number)) OVER (partition by portfolio_id) Covered_Comapnies\n" +
                ",total_companies\n" +
                ",p.AS_OF_DATE\n" +
                "FROM df_target.regulatory_report_sfdr rrs ,\n" +
                "(SELECT portfolio_id\n" +
                ",nvl(bvd9_number, sec_id) AS bvd9_number\n" +
                ",COUNT(*) OVER (partition by portfolio_id) total_companies\n" +
                ",MAX(AS_OF_DATE) OVER (partition by portfolio_id) AS_OF_DATE\n" +
                "FROM df_target.df_portfolio\n" +
                "WHERE portfolio_id IN  ('" + portfolioId + "')) p\n" +
                "    WHERE rrs.bvd9_number = p.bvd9_number) sc left outer join\n" +
                "        df_target.regulatory_report_sfdr rrs\n" +
                "on  rrs.BVD9_NUMBER = sc.orbis_id   inner join\n" +
                "    (select distinct sc.portfolio_id, round((sc.Covered_Comapnies / sc.total_companies) * 100, 0) AS sfdr_coverage, round((tc.Covered_Comapnies / tc.total_companies) * 100, 0) AS taxonomy_coverage,\n" +
                "       sc.AS_OF_DATE from\n" +
                "       (SELECT distinct portfolio_id\n" +
                ",eto.orbis_id\n" +
                ",COUNT(DISTINCT(eto.orbis_id)) OVER (partition by portfolio_id) Covered_Comapnies\n" +
                ",total_companies\n" +
                ",p.AS_OF_DATE\n" +
                "FROM (SELECT portfolio_id\n" +
                ",nvl(bvd9_number, sec_id) AS bvd9_number\n" +
                ",COUNT(*) OVER (partition by portfolio_id) total_companies\n" +
                ",MAX(AS_OF_DATE) OVER (partition by portfolio_id) AS_OF_DATE\n" +
                "FROM df_target.df_portfolio\n" +
                "WHERE portfolio_id IN  ('" + portfolioId + "')) p left outer join df_target.EU_TAXONOMY_OVERVIEW eto\n" +
                "on eto.orbis_id = p.bvd9_number) tc,\n" +
                "       (SELECT distinct portfolio_id\n" +
                ",rrs.bvd9_number orbis_id\n" +
                ",COUNT(DISTINCT(rrs.bvd9_number)) OVER (partition by portfolio_id) Covered_Comapnies\n" +
                ",total_companies\n" +
                ",p.AS_OF_DATE\n" +
                "FROM df_target.regulatory_report_sfdr rrs ,\n" +
                "(SELECT portfolio_id\n" +
                ",nvl(bvd9_number, sec_id) AS bvd9_number\n" +
                ",COUNT(*) OVER (partition by portfolio_id) total_companies\n" +
                ",MAX(AS_OF_DATE) OVER (partition by portfolio_id) AS_OF_DATE\n" +
                "FROM df_target.df_portfolio\n" +
                "WHERE portfolio_id IN  ('" + portfolioId + "')) p\n" +
                "    WHERE rrs.bvd9_number = p.bvd9_number) sc\n" +
                "       where sc.portfolio_id = tc.portfolio_id)\n" +
                "    tt on tt.portfolio_id = sc.portfolio_id\n" +
                "ORDER BY portfolio_id\n" +
                ",reporting_year DESC;";
        return getQueryResultMap(query);
    }

    public List<Map<String, Object>> getSFDRCompanyOutput(String portfolioId, String year) {
        String query = "";
        if(year.toLowerCase().equals("latest"))
            query = "with p as (SELECT COMPANY_NAME , IDENTIFIER_TYPE, YEAR, VE_ID,FACTSET_ID,HIGH_IMPACT_CHK,SFDR_1TXNMYID_1,SFDR_1TXNMYID_2,SFDR_1TXNMYID_3,SFDR_1TXNMYID_4,RPTNG_YR_FOR_SFDR_1,SFDR_2TXNMYID_27,\n" +
                    "RPTNG_YR_FOR_SFDR_2,SFDR_3TXNMYID_28, RPTNG_YR_FOR_SFDR_3,SFDR_4TXNMYID_23,RPTNG_YR_FOR_SFDR_4,SFDR_5TXNMYID_5,SFDR_5TXNMYID_7,SFDR_5TXNMYID_11, SFDR_5TXNMYID_6,SFDR_5TXNMYID_8,\n" +
                    "SFDR_5TXNMYID_12,RPTNG_YR_FOR_SFDR_5,SFDR_6TXNMYID_35, RPTNG_YR_FOR_SFDR_6,SFDR_7TXNMYID_25,RPTNG_YR_FOR_SFDR_7, SFDR_8TXNMYID_13,RPTNG_YR_FOR_SFDR_8,SFDR_9TXNMYID_14,RPTNG_YR_FOR_SFDR_9,\n" +
                    "SFDR_10TXNMYID_29,RPTNG_YR_FOR_SFDR_10,SFDR_12TXNMYID_16, SFDR_12TXNMYID_15, RPTNG_YR_FOR_SFDR_12,SFDR_13TXNMYID_20,SFDR_13TXNMYID_21,SFDR_13TXNMYID_22,SFDR_13TXNMYID_19,SFDR_13FemByMen,\n" +
                    "RPTNG_YR_FOR_SFDR_13,SFDR_14TXNMYID_24, RPTNG_YR_FOR_SFDR_14, SFDR_17TXNMYID_26,RPTNG_YR_FOR_SFDR_17 FROM VW_SFDR_REPORT_COMPANY_OUTPUT WHERE PORTFOLIO_ID='"+portfolioId+"' \n" +
                    "AND DATE_BASED_DATA_TYPE='yearly'),\n" +
                    "q as (select * from p where SFDR_1TXNMYID_1<>'NULL' or SFDR_1TXNMYID_2<>'NULL' or SFDR_1TXNMYID_3<>'NULL' qualify row_number() OVER (partition BY FACTSET_ID ORDER BY FACTSET_ID, YEAR DESC) =1)\n" +
                    "select * from p where COMPANY_NAME not in (select COMPANY_NAME from q) qualify row_number() OVER (partition BY FACTSET_ID ORDER BY FACTSET_ID, YEAR DESC) =1\n" +
                    "union all \n" +
                    "select * from q";
        else query = "SELECT COMPANY_NAME , IDENTIFIER_TYPE, YEAR, VE_ID,FACTSET_ID,HIGH_IMPACT_CHK,SFDR_1TXNMYID_1,SFDR_1TXNMYID_2,SFDR_1TXNMYID_3,SFDR_1TXNMYID_4,RPTNG_YR_FOR_SFDR_1,SFDR_2TXNMYID_27,\n" +
                "RPTNG_YR_FOR_SFDR_2,SFDR_3TXNMYID_28,RPTNG_YR_FOR_SFDR_3,SFDR_4TXNMYID_23,RPTNG_YR_FOR_SFDR_4,SFDR_5TXNMYID_5,SFDR_5TXNMYID_7,SFDR_5TXNMYID_11,\n" +
                "SFDR_5TXNMYID_6,SFDR_5TXNMYID_8,SFDR_5TXNMYID_12,RPTNG_YR_FOR_SFDR_5,SFDR_6TXNMYID_35,RPTNG_YR_FOR_SFDR_6,SFDR_7TXNMYID_25,RPTNG_YR_FOR_SFDR_7,\n" +
                "SFDR_8TXNMYID_13,RPTNG_YR_FOR_SFDR_8,SFDR_9TXNMYID_14,RPTNG_YR_FOR_SFDR_9,SFDR_10TXNMYID_29,RPTNG_YR_FOR_SFDR_10,SFDR_12TXNMYID_16,SFDR_12TXNMYID_15,\n" +
                "RPTNG_YR_FOR_SFDR_12,SFDR_13TXNMYID_20,SFDR_13TXNMYID_21,SFDR_13TXNMYID_22,SFDR_13TXNMYID_19,SFDR_13FemByMen,RPTNG_YR_FOR_SFDR_13,SFDR_14TXNMYID_24,\n" +
                "RPTNG_YR_FOR_SFDR_14,SFDR_17TXNMYID_26,RPTNG_YR_FOR_SFDR_17\n" +
                "FROM VW_SFDR_REPORT_COMPANY_OUTPUT\n" +
                "--where COMPANY_NAME like '%Vantage Towers AG%' SFDR_13FemByTot,\n" +
                "WHERE PORTFOLIO_ID='"+portfolioId+"'\n" +
                "AND YEAR = '"+year+"'\n" +
                "AND DATE_BASED_DATA_TYPE='yearly'";
        return getQueryResultMap(query);
    }

    public List<Map<String, Object>> getRUnderlyingDataOverview(String portfolioId) {

        String query = "WITH PORTFOLIO_TOTAL AS (\n" +
                "SELECT (DIV0(portfolio_total, MIDRATE)) AS portfolio_total_in_eur FROM ( SELECT SUM(df.VALUE) AS portfolio_total, CURRENCY\n" +
                "FROM DF_TARGET.DF_PORTFOLIO AS df WHERE df.PORTFOLIO_ID = '"+portfolioId+"'   GROUP BY df.PORTFOLIO_ID, CURRENCY) df\n" +
                "INNER JOIN ( SELECT FROMCURRCODE, TOCURRCODE, MIDRATE FROM DF_LOOKUP.FX_RATE WHERE TOCURRCODE = 'EUR' QUALIFY ROW_NUMBER() OVER ( PARTITION BY FROMCURRCODE, TOCURRCODE ORDER BY EXRATEDATE DESC NULLS LAST\n" +
                ",CREATE_DATE_TIME DESC,MODIFY_DATE_TIME DESC) = 1\n" +
                ") fx_rate ON fx_rate.FROMCURRCODE = df.CURRENCY),user_input_history\n" +
                "AS (SELECT DISTINCT DF.BVD9_NUMBER,ISS.ISIN\n" +
                ",ROUND(SUM(DIV0(VALUE, MIDRATE)) OVER (PARTITION BY df.BVD9_NUMBER), 2) AS EXPOSURE_AMNT_IN_EUR\n" +
                ",ROUND(100 * (SUM(DIV0(VALUE, MIDRATE)) OVER (PARTITION BY df.BVD9_NUMBER)) / (SELECT portfolio_total_in_eur\n" +
                "FROM portfolio_total), 2) AS EXPOSURE_PERCENTAGE\n" +
                "FROM DF_TARGET.DF_PORTFOLIO df\n" +
                "INNER JOIN DF_TARGET.ESG_ENTITY_MASTER eem ON eem.ORBIS_ID = df.BVD9_NUMBER\n" +
                "AND eem.ENTITY_STATUS = 'Active'\n" +
                "INNER JOIN (SELECT FROMCURRCODE,TOCURRCODE,MIDRATE\n" +
                "FROM DF_LOOKUP.FX_RATE WHERE TOCURRCODE = 'EUR' QUALIFY ROW_NUMBER() OVER (\n" +
                "PARTITION BY FROMCURRCODE,TOCURRCODE ORDER BY EXRATEDATE DESC NULLS LAST\n" +
                ",CREATE_DATE_TIME DESC, MODIFY_DATE_TIME DESC) = 1) fx_rate ON fx_rate.FROMCURRCODE = df.CURRENCY\n" +
                "LEFT JOIN DF_DERIVED.ISIN_SORTED ISS ON eem.ORBIS_ID = ISS.BVD9_NUMBER\n" +
                "AND PRIMARY_ISIN = 'Y' WHERE PORTFOLIO_ID = '"+portfolioId+"'  AND df.BVD9_NUMBER IS NOT NULL\n" +
                "),OVERVIEW_DTLS_1 AS (\n" +
                "SELECT DISTINCT ORBIS_ID,ISIN,VIGEO_KEY,TITLE,ZONE,COUNTRY_OF_INCORPORATION,ENTITY_TYPE,GENERIC_SECTOR,EXPOSURE_AMNT_IN_EUR,EXPOSURE_PERCENTAGE\n" +
                "FROM EU_TAXONOMY_OVERVIEW\n" +
                "INNER JOIN user_input_history ON user_input_history.BVD9_NUMBER = EU_TAXONOMY_OVERVIEW.ORBIS_ID QUALIFY ROW_NUMBER() OVER (PARTITION BY ORBIS_ID ORDER BY PRODUCED_DATE DESC\n" +
                ") = 1),OVERVIEW_DTLS_2 AS (SELECT DISTINCT OVERVIEW_DTLS_1.ORBIS_ID, ISIN,VIGEO_KEY\n" +
                ",TITLE, ZONE, COUNTRY_OF_INCORPORATION, ENTITY_TYPE, GENERIC_SECTOR, EXPOSURE_AMNT_IN_EUR, EXPOSURE_PERCENTAGE,LEI FROM OVERVIEW_DTLS_1\n" +
                "LEFT JOIN (SELECT DISTINCT ORBIS_ID, LEI FROM ESG_ENTITY_MASTER\n" +
                "WHERE ENTITY_STATUS = 'Active') LEI ON LEI.ORBIS_ID = OVERVIEW_DTLS_1.ORBIS_ID)\n" +
                ",OVERVIEW_DTLS_3 AS (SELECT DISTINCT OVERVIEW_DTLS_2.ORBIS_ID, ISIN\n" +
                ",VIGEO_KEY, TITLE, ZONE,COUNTRY_OF_INCORPORATION,ENTITY_TYPE,GENERIC_SECTOR\n" +
                ",EXPOSURE_AMNT_IN_EUR,EXPOSURE_PERCENTAGE,LEI,NFRD_SCOPE FROM OVERVIEW_DTLS_2\n" +
                "LEFT JOIN (SELECT ORBIS_ID,ATTRIBUTE_VALUE AS NFRD_SCOPE\n" +
                "FROM EU_TAXONOMY_OVERVIEW WHERE DATA_TYPE = 'scope'\n" +
                "AND ATTRIBUTE_TYPE = 'nfrd'QUALIFY ROW_NUMBER() OVER (PARTITION BY ORBIS_ID ORDER BY PRODUCED_DATE DESC) = 1) \n" +
                "NFRD_SCOPE ON NFRD_SCOPE.ORBIS_ID = OVERVIEW_DTLS_2.ORBIS_ID)\n" +
                ",OVERVIEW_DTLS_4 AS (SELECT DISTINCT OVERVIEW_DTLS_3.ORBIS_ID,ISIN\n" +
                ",VIGEO_KEY,TITLE,ZONE,COUNTRY_OF_INCORPORATION,ENTITY_TYPE,GENERIC_SECTOR,EXPOSURE_AMNT_IN_EUR,EXPOSURE_PERCENTAGE,LEI,NFRD_SCOPE,TURNOVER_REPORTING_YEAR\n" +
                "FROM OVERVIEW_DTLS_3 LEFT JOIN (SELECT ORBIS_ID,ATTRIBUTE_VALUE AS TURNOVER_REPORTING_YEAR FROM EU_TAXONOMY_OVERVIEW\n" +
                "WHERE DATA_TYPE = 'rep_year'AND ATTRIBUTE_LEVEL = 'TURNOVER'\n" +
                "QUALIFY ROW_NUMBER() OVER (PARTITION BY ORBIS_ID ORDER BY PRODUCED_DATE DESC) = 1\n" +
                ") TURNOVER_REPORTING_YEAR ON TURNOVER_REPORTING_YEAR.ORBIS_ID = OVERVIEW_DTLS_3.ORBIS_ID)\n" +
                ",OVERVIEW_DTLS_5 AS (SELECT DISTINCT OVERVIEW_DTLS_4.ORBIS_ID,ISIN,VIGEO_KEY,TITLE,ZONE,COUNTRY_OF_INCORPORATION,ENTITY_TYPE,GENERIC_SECTOR,EXPOSURE_AMNT_IN_EUR,EXPOSURE_PERCENTAGE\n" +
                ",LEI,NFRD_SCOPE,TURNOVER_REPORTING_YEAR,CAPEX_REPORTING_YEAR FROM OVERVIEW_DTLS_4\n" +
                "LEFT JOIN (SELECT ORBIS_ID,ATTRIBUTE_VALUE AS CAPEX_REPORTING_YEAR FROM EU_TAXONOMY_OVERVIEW\n" +
                "WHERE DATA_TYPE = 'rep_year'AND ATTRIBUTE_LEVEL = 'CAPEX'\n" +
                "QUALIFY ROW_NUMBER() OVER (PARTITION BY ORBIS_ID ORDER BY PRODUCED_DATE DESC) = 1\n" +
                ") CAPEX_REPORTING_YEAR ON CAPEX_REPORTING_YEAR.ORBIS_ID = OVERVIEW_DTLS_4.ORBIS_ID)\n" +
                ",OVERVIEW_DTLS_6 AS (SELECT DISTINCT OVERVIEW_DTLS_5.ORBIS_ID,ISIN,VIGEO_KEY,TITLE,ZONE\n" +
                ",COUNTRY_OF_INCORPORATION,ENTITY_TYPE,GENERIC_SECTOR,EXPOSURE_AMNT_IN_EUR,EXPOSURE_PERCENTAGE,LEI,NFRD_SCOPE\n" +
                ",TURNOVER_REPORTING_YEAR,CAPEX_REPORTING_YEAR,CLIMATE_CHANGE_MITGTN_TURNOVER\n" +
                "FROM OVERVIEW_DTLS_5 LEFT JOIN (\n" +
                "SELECT ORBIS_ID,ATTRIBUTE_VALUE AS CLIMATE_CHANGE_MITGTN_TURNOVER\n" +
                "FROM EU_TAXONOMY_OVERVIEW WHERE ATTRIBUTE_TYPE = 'CLIMATE CHANGE MITIGATION'\n" +
                "AND ATTRIBUTE_LEVEL = 'TURNOVER' QUALIFY ROW_NUMBER() OVER (\n" +
                "PARTITION BY ORBIS_ID ORDER BY PRODUCED_DATE DESC) = 1) \n" +
                "CLIMATE_CHANGE_MITGTN_TURNOVER ON CLIMATE_CHANGE_MITGTN_TURNOVER.ORBIS_ID = OVERVIEW_DTLS_5.ORBIS_ID)\n" +
                ",OVERVIEW_DTLS_7 AS (\n" +
                "SELECT DISTINCT OVERVIEW_DTLS_6.ORBIS_ID,ISIN,VIGEO_KEY,TITLE,ZONE,COUNTRY_OF_INCORPORATION\n" +
                ",ENTITY_TYPE,GENERIC_SECTOR,EXPOSURE_AMNT_IN_EUR\n" +
                ",EXPOSURE_PERCENTAGE,LEI,NFRD_SCOPE,TURNOVER_REPORTING_YEAR\n" +
                ",CAPEX_REPORTING_YEAR,CLIMATE_CHANGE_MITGTN_TURNOVER\n" +
                ",CLIMATE_CHANGE_MITGTN_CAPEX FROM OVERVIEW_DTLS_6\n" +
                "LEFT JOIN (SELECT ORBIS_ID\n" +
                ",ATTRIBUTE_VALUE AS CLIMATE_CHANGE_MITGTN_CAPEX FROM EU_TAXONOMY_OVERVIEW\n" +
                " WHERE ATTRIBUTE_TYPE = 'CLIMATE CHANGE MITIGATION'\n" +
                "AND ATTRIBUTE_LEVEL = 'CAPEX'\n" +
                "QUALIFY ROW_NUMBER() OVER (PARTITION BY ORBIS_ID ORDER BY PRODUCED_DATE DESC) = 1) \n" +
                "CLIMATE_CHANGE_MITGTN_CAPEX ON CLIMATE_CHANGE_MITGTN_CAPEX.ORBIS_ID = OVERVIEW_DTLS_6.ORBIS_ID)\n" +
                ",OVERVIEW_DTLS_8 AS (\n" +
                "SELECT DISTINCT OVERVIEW_DTLS_7.ORBIS_ID,ISIN,VIGEO_KEY,TITLE,ZONE,COUNTRY_OF_INCORPORATION,ENTITY_TYPE,GENERIC_SECTOR,EXPOSURE_AMNT_IN_EUR,EXPOSURE_PERCENTAGE\n" +
                ",LEI,NFRD_SCOPE,TURNOVER_REPORTING_YEAR,CAPEX_REPORTING_YEAR,CLIMATE_CHANGE_MITGTN_TURNOVER\n" +
                ",CLIMATE_CHANGE_MITGTN_CAPEX,CLIMATE_CHANGE_ADAPTTN_TURNOVER\n" +
                "FROM OVERVIEW_DTLS_7 LEFT JOIN (\n" +
                "SELECT ORBIS_ID,ATTRIBUTE_VALUE AS CLIMATE_CHANGE_ADAPTTN_TURNOVER\n" +
                "FROM EU_TAXONOMY_OVERVIEW WHERE ATTRIBUTE_TYPE = 'CLIMATE CHANGE ADAPTATION'\n" +
                "AND ATTRIBUTE_LEVEL = 'TURNOVER' QUALIFY ROW_NUMBER() OVER (\n" +
                "PARTITION BY ORBIS_ID ORDER BY PRODUCED_DATE DESC) = 1) \n" +
                "CLIMATE_CHANGE_ADAPTTN_TURNOVER ON CLIMATE_CHANGE_ADAPTTN_TURNOVER.ORBIS_ID = OVERVIEW_DTLS_7.ORBIS_ID)\n" +
                ",OVERVIEW_DTLS_9 AS (SELECT DISTINCT OVERVIEW_DTLS_8.ORBIS_ID,ISIN,VIGEO_KEY,TITLE,ZONE,COUNTRY_OF_INCORPORATION,ENTITY_TYPE,GENERIC_SECTOR\n" +
                ",EXPOSURE_AMNT_IN_EUR,EXPOSURE_PERCENTAGE,LEI,NFRD_SCOPE,TURNOVER_REPORTING_YEAR,CAPEX_REPORTING_YEAR,CLIMATE_CHANGE_MITGTN_TURNOVER,CLIMATE_CHANGE_MITGTN_CAPEX,CLIMATE_CHANGE_ADAPTTN_TURNOVER,CLIMATE_CHANGE_ADAPTTN_CAPEX\n" +
                "FROM OVERVIEW_DTLS_8\n" +
                "LEFT JOIN (SELECT ORBIS_ID\n" +
                ",ATTRIBUTE_VALUE AS CLIMATE_CHANGE_ADAPTTN_CAPEX\n" +
                "FROM EU_TAXONOMY_OVERVIEW\n" +
                "WHERE ATTRIBUTE_TYPE = 'CLIMATE CHANGE ADAPTATION'\n" +
                "AND ATTRIBUTE_LEVEL = 'CAPEX'\n" +
                "QUALIFY ROW_NUMBER() OVER (\n" +
                "PARTITION BY ORBIS_ID ORDER BY PRODUCED_DATE DESC) = 1\n" +
                ") CLIMATE_CHANGE_ADAPTTN_CAPEX ON CLIMATE_CHANGE_ADAPTTN_CAPEX.ORBIS_ID = OVERVIEW_DTLS_8.ORBIS_ID)\n" +
                ",OVERVIEW_DTLS_10 AS (\n" +
                "SELECT DISTINCT OVERVIEW_DTLS_9.ORBIS_ID,ISIN,VIGEO_KEY,TITLE,ZONE,COUNTRY_OF_INCORPORATION\n" +
                ",ENTITY_TYPE,GENERIC_SECTOR,EXPOSURE_AMNT_IN_EUR,EXPOSURE_PERCENTAGE\n" +
                ",LEI,NFRD_SCOPE,TURNOVER_REPORTING_YEAR,CAPEX_REPORTING_YEAR\n" +
                ",CLIMATE_CHANGE_MITGTN_TURNOVER,CLIMATE_CHANGE_MITGTN_CAPEX\n" +
                ",CLIMATE_CHANGE_ADAPTTN_TURNOVER,CLIMATE_CHANGE_ADAPTTN_CAPEX\n" +
                ",TAXONOMY_ELIGIBILITY_TURNOVER FROM OVERVIEW_DTLS_9\n" +
                "LEFT JOIN (SELECT ORBIS_ID\n" +
                ",ATTRIBUTE_VALUE AS TAXONOMY_ELIGIBILITY_TURNOVER\n" +
                "FROM EU_TAXONOMY_OVERVIEW\n" +
                "WHERE DATA_TYPE = 'taxonomy_eligibility'\n" +
                "AND ATTRIBUTE_LEVEL = 'TURNOVER'\n" +
                "QUALIFY ROW_NUMBER() OVER (PARTITION BY ORBIS_ID ORDER BY PRODUCED_DATE DESC) = 1)\n" +
                "TAXONOMY_ELIGIBILITY_TURNOVER ON TAXONOMY_ELIGIBILITY_TURNOVER.ORBIS_ID = OVERVIEW_DTLS_9.ORBIS_ID)\n" +
                ",OVERVIEW_DTLS_11 AS (SELECT DISTINCT OVERVIEW_DTLS_10.ORBIS_ID,ISIN,VIGEO_KEY,TITLE,ZONE,COUNTRY_OF_INCORPORATION,ENTITY_TYPE\n" +
                ",GENERIC_SECTOR,EXPOSURE_AMNT_IN_EUR,EXPOSURE_PERCENTAGE,LEI,NFRD_SCOPE\n" +
                ",TURNOVER_REPORTING_YEAR,CAPEX_REPORTING_YEAR,CLIMATE_CHANGE_MITGTN_TURNOVER\n" +
                ",CLIMATE_CHANGE_MITGTN_CAPEX,CLIMATE_CHANGE_ADAPTTN_TURNOVER\n" +
                ",CLIMATE_CHANGE_ADAPTTN_CAPEX,TAXONOMY_ELIGIBILITY_TURNOVER\n" +
                ",ELIGIBLE_TURNOVER_VALUE_TYPE FROM OVERVIEW_DTLS_10 LEFT JOIN (\n" +
                "SELECT ORBIS_ID,ATTRIBUTE_VALUE AS ELIGIBLE_TURNOVER_VALUE_TYPE\n" +
                "FROM EU_TAXONOMY_OVERVIEW\n" +
                "WHERE DATA_TYPE = 'eligible_value_type'\n" +
                "AND ATTRIBUTE_LEVEL = 'TURNOVER'\n" +
                "QUALIFY ROW_NUMBER() OVER (\n" +
                "PARTITION BY ORBIS_ID ORDER BY PRODUCED_DATE DESC) = 1) \n" +
                "ELIGIBLE_TURNOVER_VALUE_TYPE ON ELIGIBLE_TURNOVER_VALUE_TYPE.ORBIS_ID = OVERVIEW_DTLS_10.ORBIS_ID)\n" +
                ",OVERVIEW_DTLS_12 AS (SELECT DISTINCT OVERVIEW_DTLS_11.ORBIS_ID,ISIN\n" +
                ",VIGEO_KEY,TITLE,ZONE,COUNTRY_OF_INCORPORATION,ENTITY_TYPE,GENERIC_SECTOR,EXPOSURE_AMNT_IN_EUR\n" +
                ",EXPOSURE_PERCENTAGE,LEI,NFRD_SCOPE,TURNOVER_REPORTING_YEAR\n" +
                ",CAPEX_REPORTING_YEAR,CLIMATE_CHANGE_MITGTN_TURNOVER,CLIMATE_CHANGE_MITGTN_CAPEX,CLIMATE_CHANGE_ADAPTTN_TURNOVER\n" +
                ",CLIMATE_CHANGE_ADAPTTN_CAPEX,TAXONOMY_ELIGIBILITY_TURNOVER,ELIGIBLE_TURNOVER_VALUE_TYPE,TAXONOMY_ELIGIBILITY_CAPEX\n" +
                "FROM OVERVIEW_DTLS_11\n" +
                "LEFT JOIN (\n" +
                "SELECT ORBIS_ID\n" +
                ",ATTRIBUTE_VALUE AS TAXONOMY_ELIGIBILITY_CAPEX\n" +
                "FROM EU_TAXONOMY_OVERVIEW\n" +
                "WHERE DATA_TYPE = 'taxonomy_eligibility'\n" +
                "AND ATTRIBUTE_LEVEL = 'CAPEX'\n" +
                "QUALIFY ROW_NUMBER() OVER (\n" +
                "PARTITION BY ORBIS_ID ORDER BY PRODUCED_DATE DESC\n" +
                ") = 1\n" +
                ") TAXONOMY_ELIGIBILITY_CAPEX ON TAXONOMY_ELIGIBILITY_CAPEX.ORBIS_ID = OVERVIEW_DTLS_11.ORBIS_ID\n" +
                ")\n" +
                ",OVERVIEW_DTLS_13\n" +
                "    AS (\n" +
                "SELECT DISTINCT OVERVIEW_DTLS_12.ORBIS_ID\n" +
                "                                    ,ISIN\n" +
                ",VIGEO_KEY,TITLE,ZONE,COUNTRY_OF_INCORPORATION,ENTITY_TYPE\n" +
                ",GENERIC_SECTOR,EXPOSURE_AMNT_IN_EUR,EXPOSURE_PERCENTAGE,LEI\n" +
                ",NFRD_SCOPE,TURNOVER_REPORTING_YEAR,CAPEX_REPORTING_YEAR,CLIMATE_CHANGE_MITGTN_TURNOVER\n" +
                ",CLIMATE_CHANGE_MITGTN_CAPEX,CLIMATE_CHANGE_ADAPTTN_TURNOVER\n" +
                ",CLIMATE_CHANGE_ADAPTTN_CAPEX,TAXONOMY_ELIGIBILITY_TURNOVER,ELIGIBLE_TURNOVER_VALUE_TYPE\n" +
                ",TAXONOMY_ELIGIBILITY_CAPEX,TAXONOMY_ALIGNED_TURNOVER\n" +
                "FROM OVERVIEW_DTLS_12 LEFT JOIN (SELECT ORBIS_ID\n" +
                ",ATTRIBUTE_VALUE AS TAXONOMY_ALIGNED_TURNOVER\n" +
                "FROM EU_TAXONOMY_OVERVIEW\n" +
                "WHERE DATA_TYPE = 'taxonomy_aligned'\n" +
                "AND ATTRIBUTE_LEVEL = 'TURNOVER'\n" +
                "QUALIFY ROW_NUMBER() OVER (\n" +
                "PARTITION BY ORBIS_ID ORDER BY PRODUCED_DATE DESC\n" +
                ") = 1\n" +
                ") TAXONOMY_ALIGNED_TURNOVER ON TAXONOMY_ALIGNED_TURNOVER.ORBIS_ID = OVERVIEW_DTLS_12.ORBIS_ID\n" +
                ")\n" +
                ",OVERVIEW_DTLS_14 AS (\n" +
                "SELECT DISTINCT OVERVIEW_DTLS_13.ORBIS_ID\n" +
                " ,ISIN,VIGEO_KEY,TITLE,ZONE,COUNTRY_OF_INCORPORATION,ENTITY_TYPE,GENERIC_SECTOR,EXPOSURE_AMNT_IN_EUR\n" +
                ",EXPOSURE_PERCENTAGE,LEI,NFRD_SCOPE,TURNOVER_REPORTING_YEAR\n" +
                ",CAPEX_REPORTING_YEAR,CLIMATE_CHANGE_MITGTN_TURNOVER\n" +
                ",CLIMATE_CHANGE_MITGTN_CAPEX,CLIMATE_CHANGE_ADAPTTN_TURNOVER\n" +
                ",CLIMATE_CHANGE_ADAPTTN_CAPEX\n" +
                ",TAXONOMY_ELIGIBILITY_TURNOVER\n" +
                ",ELIGIBLE_TURNOVER_VALUE_TYPE\n" +
                ",TAXONOMY_ELIGIBILITY_CAPEX\n" +
                ",TAXONOMY_ALIGNED_TURNOVER\n" +
                ",TAXONOMY_ALIGNED_CAPEX\n" +
                "FROM OVERVIEW_DTLS_13\n" +
                "LEFT JOIN (\n" +
                "SELECT ORBIS_ID\n" +
                ",ATTRIBUTE_VALUE AS TAXONOMY_ALIGNED_CAPEX\n" +
                "FROM EU_TAXONOMY_OVERVIEW\n" +
                "WHERE DATA_TYPE = 'taxonomy_aligned'\n" +
                "AND ATTRIBUTE_LEVEL = 'CAPEX'\n" +
                "QUALIFY ROW_NUMBER() OVER (PARTITION BY ORBIS_ID ORDER BY PRODUCED_DATE DESC) = 1\n" +
                ") TAXONOMY_ALIGNED_CAPEX ON TAXONOMY_ALIGNED_CAPEX.ORBIS_ID = OVERVIEW_DTLS_13.ORBIS_ID)\n" +
                ",OVERVIEW_DTLS_15 AS (\n" +
                "SELECT DISTINCT OVERVIEW_DTLS_14.ORBIS_ID,ISIN\n" +
                ",VIGEO_KEY,TITLE,ZONE,COUNTRY_OF_INCORPORATION,ENTITY_TYPE,GENERIC_SECTOR,EXPOSURE_AMNT_IN_EUR,EXPOSURE_PERCENTAGE\n" +
                ",LEI,NFRD_SCOPE,TURNOVER_REPORTING_YEAR,CAPEX_REPORTING_YEAR,CLIMATE_CHANGE_MITGTN_TURNOVER,CLIMATE_CHANGE_MITGTN_CAPEX\n" +
                ",CLIMATE_CHANGE_ADAPTTN_TURNOVER,CLIMATE_CHANGE_ADAPTTN_CAPEX,TAXONOMY_ELIGIBILITY_TURNOVER,ELIGIBLE_TURNOVER_VALUE_TYPE\n" +
                ",TAXONOMY_ELIGIBILITY_CAPEX,TAXONOMY_ALIGNED_TURNOVER,TAXONOMY_ALIGNED_CAPEX,ELIGIBLE_CAPEX_VALUE_TYPE\n" +
                "FROM OVERVIEW_DTLS_14\n" +
                "LEFT JOIN (\n" +
                "SELECT ORBIS_ID\n" +
                ",ATTRIBUTE_VALUE AS ELIGIBLE_CAPEX_VALUE_TYPE\n" +
                "FROM EU_TAXONOMY_OVERVIEW\n" +
                "WHERE DATA_TYPE = 'eligible_value_type'\n" +
                "AND ATTRIBUTE_LEVEL = 'CAPEX'\n" +
                "QUALIFY ROW_NUMBER() OVER (\n" +
                "PARTITION BY ORBIS_ID ORDER BY PRODUCED_DATE DESC\n" +
                ") = 1\n" +
                ") ELIGIBLE_CAPEX_VALUE_TYPE ON ELIGIBLE_CAPEX_VALUE_TYPE.ORBIS_ID = OVERVIEW_DTLS_14.ORBIS_ID\n" +
                "), OVERVIEW_DTLS_16 AS (\n" +
                "SELECT DISTINCT OVERVIEW_DTLS_15.ORBIS_ID,ISIN,VIGEO_KEY\n" +
                ",TITLE,ZONE,COUNTRY_OF_INCORPORATION,ENTITY_TYPE,GENERIC_SECTOR,EXPOSURE_AMNT_IN_EUR,EXPOSURE_PERCENTAGE,LEI\n" +
                ",NFRD_SCOPE,TURNOVER_REPORTING_YEAR,CAPEX_REPORTING_YEAR\n" +
                ",CLIMATE_CHANGE_MITGTN_TURNOVER,CLIMATE_CHANGE_MITGTN_CAPEX,CLIMATE_CHANGE_ADAPTTN_TURNOVER\n" +
                ",CLIMATE_CHANGE_ADAPTTN_CAPEX,TAXONOMY_ELIGIBILITY_TURNOVER,ELIGIBLE_TURNOVER_VALUE_TYPE\n" +
                ",TAXONOMY_ELIGIBILITY_CAPEX,TAXONOMY_ALIGNED_TURNOVER\n" +
                ",TAXONOMY_ALIGNED_CAPEX,ELIGIBLE_CAPEX_VALUE_TYPE,ALIGNED_TURNOVER_VALUE_TYPE\n" +
                "FROM OVERVIEW_DTLS_15 LEFT JOIN (\n" +
                "SELECT ORBIS_ID,ATTRIBUTE_VALUE AS ALIGNED_TURNOVER_VALUE_TYPE\n" +
                "FROM EU_TAXONOMY_OVERVIEW WHERE DATA_TYPE = 'aligned_value_type'\n" +
                "AND ATTRIBUTE_LEVEL = 'TURNOVER'QUALIFY ROW_NUMBER() OVER (\n" +
                "PARTITION BY ORBIS_ID ORDER BY PRODUCED_DATE DESC) = 1\n" +
                ") ALIGNED_TURNOVER_VALUE_TYPE ON ALIGNED_TURNOVER_VALUE_TYPE.ORBIS_ID = OVERVIEW_DTLS_15.ORBIS_ID)\n" +
                ",OVERVIEW_DTLS_17 AS (\n" +
                "SELECT DISTINCT OVERVIEW_DTLS_16.ORBIS_ID AS orbis_id,ISIN AS isin\n" +
                ",VIGEO_KEY AS vigeo_key\n" +
                ",TITLE AS title,ZONE AS zone\n" +
                ",COUNTRY_OF_INCORPORATION AS country_of_incorporation\n" +
                ",ENTITY_TYPE AS entity_type\n" +
                ",GENERIC_SECTOR AS generic_sector\n" +
                ",EXPOSURE_AMNT_IN_EUR AS exposure_amnt_in_eur\n" +
                ",EXPOSURE_PERCENTAGE AS exposure_percentage\n" +
                ",LEI AS lei\n" +
                ",NFRD_SCOPE AS nfrd_scope\n" +
                ",TURNOVER_REPORTING_YEAR AS turnover_reporting_year\n" +
                ",CAPEX_REPORTING_YEAR AS capex_reporting_year\n" +
                ",CLIMATE_CHANGE_MITGTN_TURNOVER AS climate_change_mtgtn_turnover\n" +
                ",CLIMATE_CHANGE_MITGTN_CAPEX AS climate_change_mitgtn_capex\n" +
                ",CLIMATE_CHANGE_ADAPTTN_TURNOVER AS climate_change_adapttn_turnover\n" +
                ",CLIMATE_CHANGE_ADAPTTN_CAPEX AS climate_change_adapttn_capex\n" +
                ",TAXONOMY_ELIGIBILITY_TURNOVER AS taxonomy_eligibility_turnover\n" +
                ",ELIGIBLE_TURNOVER_VALUE_TYPE AS eligible_turnover_value_type\n" +
                ",TAXONOMY_ELIGIBILITY_CAPEX AS taxonomy_eligibility_capex\n" +
                ",TAXONOMY_ALIGNED_TURNOVER AS taxonomy_aligned_turnover\n" +
                ",TAXONOMY_ALIGNED_CAPEX AS taxonomy_aligned_capex\n" +
                ",ELIGIBLE_CAPEX_VALUE_TYPE AS eligible_capex_value_type\n" +
                ",ALIGNED_TURNOVER_VALUE_TYPE AS aligned_turnover_value_type\n" +
                ",ALIGNED_CAPEX_VALUE_TYPE AS aligned_capex_value_type\n" +
                "FROM OVERVIEW_DTLS_16\n" +
                "LEFT JOIN (SELECT ORBIS_ID,ATTRIBUTE_VALUE AS ALIGNED_CAPEX_VALUE_TYPE FROM EU_TAXONOMY_OVERVIEW\n" +
                "WHERE DATA_TYPE = 'aligned_value_type' AND ATTRIBUTE_LEVEL = 'CAPEX'\n" +
                "QUALIFY ROW_NUMBER() OVER (PARTITION BY ORBIS_ID ORDER BY PRODUCED_DATE DESC) = 1) ALIGNED_CAPEX_VALUE_TYPE ON ALIGNED_CAPEX_VALUE_TYPE.ORBIS_ID = OVERVIEW_DTLS_16.ORBIS_ID)\n" +
                "SELECT Orbis_id as \"BVD9 ID\" ,\n" +
                "VIGEO_KEY as \"VIGEO KEY\",\n" +
                "ISIN as \"ISIN\",\n" +
                "LEI as \"LEGAL ENTITY IDENTIFIER (LEI)\",TITLE,\n" +
                "EXPOSURE_AMNT_IN_EUR as  \"Exposure Amount in EUR\",\n" +
                "EXPOSURE_PERCENTAGE as \"Exposure Amount %\",\n" +
                "ZONE,\n" +
                "COUNTRY_OF_INCORPORATION as \"COUNTRY\",\n" +
                "ENTITY_TYPE \"ENTITY TYPE (SOVEREIGN, NON-FINANCIAL, FINANCIAL)\",\n" +
                "GENERIC_SECTOR as \"GENERIC SECTOR\",\n" +
                "NFRD_SCOPE as \"NFRD SCOPE (YES/NO)\",\n" +
                "TURNOVER_REPORTING_YEAR as \"TURNOVER REPORTING YEAR\",\n" +
                "CAPEX_REPORTING_YEAR as  \"CAPEX REPORTING YEAR\",\n" +
                "CLIMATE_CHANGE_MTGTN_TURNOVER as \"CLIMATE CHANGE MITIGATION - PROPORTION OF TAXONOMY ALIGNED TURNOVER (% OF TOTAL COMPANY TURNOVER)\",\n" +
                "CLIMATE_CHANGE_MITGTN_CAPEX as \"CLIMATE CHANGE MITIGATION - PROPORTION OF TAXONOMY ALIGNED CAPEX (% OF TOTAL COMPANY CAPEX)\",\n" +
                "CLIMATE_CHANGE_MITGTN_CAPEX as \"CLIMATE CHANGE ADAPTATION - PROPORTION OF TAXONOMY ALIGNED TURNOVER (% OF TOTAL COMPANY TURNOVER)\",\n" +
                "CLIMATE_CHANGE_ADAPTTN_CAPEX as \"CLIMATE CHANGE ADAPTATION - PROPORTION OF TAXONOMY ALIGNED CAPEX (% OF TOTAL COMPANY CAPEX)\",\n" +
                "TAXONOMY_ELIGIBILITY_TURNOVER as \"EU TAXONOMY ELIGIBLE TURNOVER (%)\",\n" +
                "ELIGIBLE_TURNOVER_VALUE_TYPE as \"EU TAXONOMY ELIGIBLE TURNOVER - VALUE TYPE\",\n" +
                "TAXONOMY_ELIGIBILITY_CAPEX as \"EU TAXONOMY ELIGIBLE CAPEX (%)\",\n" +
                "ELIGIBLE_CAPEX_VALUE_TYPE as \"EU TAXONOMY ELIGIBLE CAPEX - VALUE TYPE\",\n" +
                "TAXONOMY_ALIGNED_TURNOVER as \"EU TAXONOMY ALIGNED TURNOVER (%)\",\n" +
                "ALIGNED_TURNOVER_VALUE_TYPE as\"EU TAXONOMY ALIGNED TURNOVER - VALUE TYPE\",\n" +
                "TAXONOMY_ALIGNED_CAPEX as \"EU TAXONOMY ALIGNED CAPEX (%)\",\n" +
                "ALIGNED_CAPEX_VALUE_TYPE as \"EU TAXONOMY ALIGNED CAPEX - VALUE TYPE\"\n" +
                "FROM OVERVIEW_DTLS_17";
        return getQueryResultMap(query);
    }

    public List<Map<String, Object>> getRUnderlyingDataActvities(String portfolioId) {

        String query = "WITH OVERVIEW_DTLS_1\n" +
                " AS (SELECT DISTINCT ORBIS_ID ,ISIN ,VIGEO_KEY ,TITLE ,ZONE ,COUNTRY_OF_INCORPORATION ,GENERIC_SECTOR ,PRODUCED_DATE FROM EU_TAXONOMY_OVERVIEW OVERVIEW \n" +
                "LEFT JOIN DF_DERIVED.ISIN_SORTED ISS ON OVERVIEW.ORBIS_ID = ISS.BVD9_NUMBER AND PRIMARY_ISIN = 'Y' WHERE OVERVIEW.ORBIS_ID IN \n" +
                "( SELECT DISTINCT DF.BVD9_NUMBER FROM DF_TARGET.DF_PORTFOLIO df INNER JOIN DF_TARGET.ESG_ENTITY_MASTER eem ON eem.ORBIS_ID = df.BVD9_NUMBER AND eem.ENTITY_STATUS = 'Active' " +
                "AND PORTFOLIO_ID = '"+portfolioId+"') \n" +
                "QUALIFY ROW_NUMBER() OVER ( PARTITION BY ORBIS_ID ORDER BY PRODUCED_DATE DESC ) = 1 )\n" +
                ",OVERVIEW_DTLS_2  AS ( SELECT DISTINCT OVERVIEW_DTLS_1.ORBIS_ID ,ISIN ,VIGEO_KEY ,TITLE ,ZONE ,COUNTRY_OF_INCORPORATION ,GENERIC_SECTOR ,\n" +
                "TURNOVER_REPORTING_YEAR REPORTING_YEAR ,OVERVIEW_DTLS_1.PRODUCED_DATE FROM OVERVIEW_DTLS_1 \n" +
                "LEFT JOIN ( SELECT DISTINCT ORBIS_ID ,ATTRIBUTE_VALUE AS TURNOVER_REPORTING_YEAR ,PRODUCED_DATE FROM EU_TAXONOMY_OVERVIEW \n" +
                " WHERE DATA_TYPE = 'rep_year' AND ATTRIBUTE_LEVEL = 'TURNOVER' AND ATTRIBUTE_VALUE IS NOT NULL ) \n" +
                "TURNOVER_REPORTING_YEAR ON TURNOVER_REPORTING_YEAR.ORBIS_ID = OVERVIEW_DTLS_1.ORBIS_ID \n" +
                "AND TURNOVER_REPORTING_YEAR.PRODUCED_DATE = OVERVIEW_DTLS_1.PRODUCED_DATE \n" +
                "QUALIFY ROW_NUMBER() OVER ( PARTITION BY OVERVIEW_DTLS_1.ORBIS_ID ORDER BY OVERVIEW_DTLS_1.PRODUCED_DATE DESC ) = 1 )\n" +
                ",ACTIVITIES_DTLS_1     AS ( SELECT DISTINCT OVERVIEW_DTLS_2.ORBIS_ID ,ACTIVITY_DESCRIPTION ,ISIN ,VIGEO_KEY ,TITLE ,ZONE ,COUNTRY_OF_INCORPORATION ,GENERIC_SECTOR ,REPORTING_YEAR ,ENVIRONMENTAL_OBJECTIVE ,OVERVIEW_DTLS_2.PRODUCED_DATE FROM OVERVIEW_DTLS_2 INNER JOIN ( SELECT ORBIS_ID ,ACTIVITY_DESCRIPTION ,ATTRIBUTE_VALUE AS ENVIRONMENTAL_OBJECTIVE ,PRODUCED_DATE FROM EU_TAXONOMY_ACTIVITIES WHERE DATA_TYPE = 'activity_environmental_objectives' AND ACTIVITY_DESCRIPTION IS NOT NULL ) ENVIRONMENTAL_OBJECTIVE ON ENVIRONMENTAL_OBJECTIVE.ORBIS_ID = OVERVIEW_DTLS_2.ORBIS_ID AND ENVIRONMENTAL_OBJECTIVE.PRODUCED_DATE = OVERVIEW_DTLS_2.PRODUCED_DATE QUALIFY ROW_NUMBER() OVER ( PARTITION BY OVERVIEW_DTLS_2.ORBIS_ID ,ACTIVITY_DESCRIPTION ORDER BY OVERVIEW_DTLS_2.PRODUCED_DATE DESC ) = 1 )\n" +
                ",ACTIVITIES_DTLS_2     AS ( SELECT DISTINCT ACTIVITIES_DTLS_1.ORBIS_ID ,ACTIVITIES_DTLS_1.ACTIVITY_DESCRIPTION ,ISIN ,VIGEO_KEY ,TITLE ,ZONE ,COUNTRY_OF_INCORPORATION, GENERIC_SECTOR ,REPORTING_YEAR ,ENVIRONMENTAL_OBJECTIVE ,CONTRBTN_TYPE_TURNOVER ,ACTIVITIES_DTLS_1.PRODUCED_DATE FROM ACTIVITIES_DTLS_1 LEFT JOIN ( SELECT ORBIS_ID ,ACTIVITY_DESCRIPTION ,ATTRIBUTE_VALUE AS CONTRBTN_TYPE_TURNOVER ,PRODUCED_DATE FROM EU_TAXONOMY_ACTIVITIES WHERE DATA_TYPE = 'activity_sub_cont_contribution_type' AND ATTRIBUTE_LEVEL = 'TURNOVER' AND ACTIVITY_DESCRIPTION IS NOT NULL ) CONTRBTN_TYPE_TURNOVER ON ACTIVITIES_DTLS_1.ORBIS_ID = CONTRBTN_TYPE_TURNOVER.ORBIS_ID AND ACTIVITIES_DTLS_1.ACTIVITY_DESCRIPTION = CONTRBTN_TYPE_TURNOVER.ACTIVITY_DESCRIPTION AND CONTRBTN_TYPE_TURNOVER.PRODUCED_DATE = ACTIVITIES_DTLS_1.PRODUCED_DATE QUALIFY ROW_NUMBER() OVER ( PARTITION BY ACTIVITIES_DTLS_1.ORBIS_ID ,ACTIVITIES_DTLS_1.ACTIVITY_DESCRIPTION ORDER BY ACTIVITIES_DTLS_1.PRODUCED_DATE DESC) = 1)\n" +
                ",ACTIVITIES_DTLS_3     AS ( SELECT DISTINCT ACTIVITIES_DTLS_2.ORBIS_ID ,ACTIVITIES_DTLS_2.ACTIVITY_DESCRIPTION ,ISIN ,VIGEO_KEY ,TITLE ,ZONE ,COUNTRY_OF_INCORPORATION, GENERIC_SECTOR ,REPORTING_YEAR ,ENVIRONMENTAL_OBJECTIVE ,CONTRBTN_TYPE_TURNOVER ,CONTRBTN_TYPE_CAPEX ,ACTIVITIES_DTLS_2.PRODUCED_DATE   FROM ACTIVITIES_DTLS_2 LEFT JOIN ( SELECT ORBIS_ID ,ACTIVITY_DESCRIPTION ,ATTRIBUTE_VALUE AS CONTRBTN_TYPE_CAPEX ,PRODUCED_DATE   FROM EU_TAXONOMY_ACTIVITIES WHERE DATA_TYPE = 'activity_sub_cont_contribution_type' AND ATTRIBUTE_LEVEL = 'CAPEX'   AND ACTIVITY_DESCRIPTION IS NOT NULL ) CONTRBTN_TYPE_CAPEX ON ACTIVITIES_DTLS_2.ORBIS_ID = CONTRBTN_TYPE_CAPEX.ORBIS_ID   AND ACTIVITIES_DTLS_2.ACTIVITY_DESCRIPTION = CONTRBTN_TYPE_CAPEX.ACTIVITY_DESCRIPTION AND ACTIVITIES_DTLS_2.PRODUCED_DATE = CONTRBTN_TYPE_CAPEX.PRODUCED_DATE   QUALIFY ROW_NUMBER() OVER ( PARTITION BY ACTIVITIES_DTLS_2.ORBIS_ID ,ACTIVITIES_DTLS_2.ACTIVITY_DESCRIPTION ORDER BY ACTIVITIES_DTLS_2.PRODUCED_DATE DESC ) = 1 )\n" +
                ",ACTIVITIES_DTLS_4     AS ( SELECT DISTINCT ACTIVITIES_DTLS_3.ORBIS_ID ,ACTIVITIES_DTLS_3.ACTIVITY_DESCRIPTION ,ISIN ,VIGEO_KEY ,TITLE ,ZONE ,COUNTRY_OF_INCORPORATION ,GENERIC_SECTOR ,REPORTING_YEAR ,ENVIRONMENTAL_OBJECTIVE ,CONTRBTN_TYPE_TURNOVER ,CONTRBTN_TYPE_CAPEX ,ACTIVITY_TURNOVER ,ACTIVITIES_DTLS_3.PRODUCED_DATE   FROM ACTIVITIES_DTLS_3 LEFT JOIN ( SELECT ORBIS_ID ,ACTIVITY_DESCRIPTION ,ATTRIBUTE_VALUE AS ACTIVITY_TURNOVER ,PRODUCED_DATE FROM EU_TAXONOMY_ACTIVITIES   WHERE DATA_TYPE = 'activity_level_percentage' AND ATTRIBUTE_LEVEL = 'TURNOVER' AND ACTIVITY_DESCRIPTION IS NOT NULL ) ACTIVITY_TURNOVER   ON ACTIVITIES_DTLS_3.ORBIS_ID = ACTIVITY_TURNOVER.ORBIS_ID AND ACTIVITIES_DTLS_3.ACTIVITY_DESCRIPTION = ACTIVITY_TURNOVER.ACTIVITY_DESCRIPTION   AND ACTIVITY_TURNOVER.PRODUCED_DATE = ACTIVITIES_DTLS_3.PRODUCED_DATE QUALIFY ROW_NUMBER() OVER ( PARTITION BY ACTIVITIES_DTLS_3.ORBIS_ID ,ACTIVITIES_DTLS_3.ACTIVITY_DESCRIPTION  ORDER BY ACTIVITIES_DTLS_3.PRODUCED_DATE DESC ) = 1 )\n" +
                ",ACTIVITIES_DTLS_5     AS ( SELECT DISTINCT ACTIVITIES_DTLS_4.ORBIS_ID ,ACTIVITIES_DTLS_4.ACTIVITY_DESCRIPTION ,ISIN ,VIGEO_KEY ,TITLE ,ZONE ,COUNTRY_OF_INCORPORATION ,GENERIC_SECTOR ,REPORTING_YEAR ,ENVIRONMENTAL_OBJECTIVE ,CONTRBTN_TYPE_TURNOVER ,CONTRBTN_TYPE_CAPEX ,ACTIVITY_TURNOVER ,VALUE_TYPE_TURNOVER ,ACTIVITIES_DTLS_4.PRODUCED_DATE FROM ACTIVITIES_DTLS_4 LEFT JOIN ( SELECT ORBIS_ID ,ACTIVITY_DESCRIPTION ,ATTRIBUTE_VALUE AS VALUE_TYPE_TURNOVER ,PRODUCED_DATE FROM EU_TAXONOMY_ACTIVITIES WHERE DATA_TYPE = 'activity_level_value_type' AND ATTRIBUTE_LEVEL = 'TURNOVER' AND ACTIVITY_DESCRIPTION IS NOT NULL ) VALUE_TYPE_TURNOVER ON ACTIVITIES_DTLS_4.ORBIS_ID = VALUE_TYPE_TURNOVER.ORBIS_ID AND ACTIVITIES_DTLS_4.ACTIVITY_DESCRIPTION = VALUE_TYPE_TURNOVER.ACTIVITY_DESCRIPTION AND VALUE_TYPE_TURNOVER.PRODUCED_DATE = ACTIVITIES_DTLS_4.PRODUCED_DATE QUALIFY ROW_NUMBER() OVER ( PARTITION BY ACTIVITIES_DTLS_4.ORBIS_ID ,ACTIVITIES_DTLS_4.ACTIVITY_DESCRIPTION ORDER BY ACTIVITIES_DTLS_4.PRODUCED_DATE DESC ) = 1 ) \n" +
                ",ACTIVITIES_DTLS_6     AS ( SELECT DISTINCT ACTIVITIES_DTLS_5.ORBIS_ID ,ACTIVITIES_DTLS_5.ACTIVITY_DESCRIPTION ,ISIN ,VIGEO_KEY ,TITLE ,ZONE ,COUNTRY_OF_INCORPORATION ,GENERIC_SECTOR ,REPORTING_YEAR ,ENVIRONMENTAL_OBJECTIVE ,CONTRBTN_TYPE_TURNOVER ,CONTRBTN_TYPE_CAPEX ,ACTIVITY_TURNOVER ,VALUE_TYPE_TURNOVER ,SOURCE_TURNOVER ,ACTIVITIES_DTLS_5.PRODUCED_DATE FROM ACTIVITIES_DTLS_5 LEFT JOIN ( SELECT ORBIS_ID ,ACTIVITY_DESCRIPTION ,ATTRIBUTE_VALUE AS SOURCE_TURNOVER ,PRODUCED_DATE FROM EU_TAXONOMY_ACTIVITIES WHERE DATA_TYPE = 'activity_level_source' AND ATTRIBUTE_LEVEL = 'TURNOVER' AND ACTIVITY_DESCRIPTION IS NOT NULL ) SOURCE_TURNOVER ON ACTIVITIES_DTLS_5.ORBIS_ID = SOURCE_TURNOVER.ORBIS_ID AND ACTIVITIES_DTLS_5.ACTIVITY_DESCRIPTION = SOURCE_TURNOVER.ACTIVITY_DESCRIPTION AND ACTIVITIES_DTLS_5.PRODUCED_DATE = SOURCE_TURNOVER.PRODUCED_DATE QUALIFY ROW_NUMBER() OVER ( PARTITION BY ACTIVITIES_DTLS_5.ORBIS_ID ,ACTIVITIES_DTLS_5.ACTIVITY_DESCRIPTION ORDER BY ACTIVITIES_DTLS_5.PRODUCED_DATE DESC ) = 1 ) \n" +
                ",ACTIVITIES_DTLS_7     AS ( SELECT DISTINCT ACTIVITIES_DTLS_6.ORBIS_ID ,ACTIVITIES_DTLS_6.ACTIVITY_DESCRIPTION ,ISIN ,VIGEO_KEY ,TITLE ,ZONE ,COUNTRY_OF_INCORPORATION ,GENERIC_SECTOR ,REPORTING_YEAR ,ENVIRONMENTAL_OBJECTIVE ,CONTRBTN_TYPE_TURNOVER ,CONTRBTN_TYPE_CAPEX ,ACTIVITY_TURNOVER ,VALUE_TYPE_TURNOVER ,SOURCE_TURNOVER ,COMMENT_TURNOVER ,ACTIVITIES_DTLS_6.PRODUCED_DATE FROM ACTIVITIES_DTLS_6 LEFT JOIN ( SELECT ORBIS_ID ,ACTIVITY_DESCRIPTION ,ATTRIBUTE_VALUE AS COMMENT_TURNOVER ,PRODUCED_DATE FROM EU_TAXONOMY_ACTIVITIES WHERE DATA_TYPE = 'activity_level_comment' AND ATTRIBUTE_LEVEL = 'TURNOVER' AND ACTIVITY_DESCRIPTION IS NOT NULL ) COMMENT_TURNOVER ON ACTIVITIES_DTLS_6.ORBIS_ID = COMMENT_TURNOVER.ORBIS_ID AND ACTIVITIES_DTLS_6.ACTIVITY_DESCRIPTION = COMMENT_TURNOVER.ACTIVITY_DESCRIPTION AND ACTIVITIES_DTLS_6.PRODUCED_DATE = COMMENT_TURNOVER.PRODUCED_DATE QUALIFY ROW_NUMBER() OVER ( PARTITION BY ACTIVITIES_DTLS_6.ORBIS_ID ,ACTIVITIES_DTLS_6.ACTIVITY_DESCRIPTION ORDER BY ACTIVITIES_DTLS_6.PRODUCED_DATE DESC ) = 1 ) \n" +
                ",ACTIVITIES_DTLS_8     AS ( SELECT DISTINCT ACTIVITIES_DTLS_7.ORBIS_ID ,ACTIVITIES_DTLS_7.ACTIVITY_DESCRIPTION ,ISIN ,VIGEO_KEY ,TITLE ,ZONE ,COUNTRY_OF_INCORPORATION ,GENERIC_SECTOR ,REPORTING_YEAR ,ENVIRONMENTAL_OBJECTIVE ,CONTRBTN_TYPE_TURNOVER ,CONTRBTN_TYPE_CAPEX ,ACTIVITY_TURNOVER ,VALUE_TYPE_TURNOVER ,SOURCE_TURNOVER ,COMMENT_TURNOVER ,ACTIVITY_CAPEX ,ACTIVITIES_DTLS_7.PRODUCED_DATE FROM ACTIVITIES_DTLS_7 LEFT JOIN ( SELECT ORBIS_ID ,ACTIVITY_DESCRIPTION ,ATTRIBUTE_VALUE AS ACTIVITY_CAPEX ,PRODUCED_DATE FROM EU_TAXONOMY_ACTIVITIES WHERE DATA_TYPE = 'activity_level_percentage' AND ATTRIBUTE_LEVEL = 'CAPEX' AND ACTIVITY_DESCRIPTION IS NOT NULL ) ACTIVITY_CAPEX ON ACTIVITIES_DTLS_7.ORBIS_ID = ACTIVITY_CAPEX.ORBIS_ID AND ACTIVITIES_DTLS_7.ACTIVITY_DESCRIPTION = ACTIVITY_CAPEX.ACTIVITY_DESCRIPTION AND ACTIVITIES_DTLS_7.PRODUCED_DATE = ACTIVITY_CAPEX.PRODUCED_DATE QUALIFY ROW_NUMBER() OVER ( PARTITION BY ACTIVITIES_DTLS_7.ORBIS_ID ,ACTIVITIES_DTLS_7.ACTIVITY_DESCRIPTION ORDER BY ACTIVITIES_DTLS_7.PRODUCED_DATE DESC ) = 1 ) \n" +
                ",ACTIVITIES_DTLS_9     AS ( SELECT DISTINCT ACTIVITIES_DTLS_8.ORBIS_ID ,ACTIVITIES_DTLS_8.ACTIVITY_DESCRIPTION ,ISIN ,VIGEO_KEY ,TITLE ,ZONE ,COUNTRY_OF_INCORPORATION ,GENERIC_SECTOR ,REPORTING_YEAR ,ENVIRONMENTAL_OBJECTIVE ,CONTRBTN_TYPE_TURNOVER ,CONTRBTN_TYPE_CAPEX ,ACTIVITY_TURNOVER ,VALUE_TYPE_TURNOVER ,SOURCE_TURNOVER ,COMMENT_TURNOVER ,ACTIVITY_CAPEX ,VALUE_TYPE_CAPEX ,ACTIVITIES_DTLS_8.PRODUCED_DATE FROM ACTIVITIES_DTLS_8 LEFT JOIN ( SELECT ORBIS_ID ,ACTIVITY_DESCRIPTION ,ATTRIBUTE_VALUE AS VALUE_TYPE_CAPEX ,PRODUCED_DATE FROM EU_TAXONOMY_ACTIVITIES WHERE DATA_TYPE = 'activity_level_value_type' AND ATTRIBUTE_LEVEL = 'CAPEX' AND ACTIVITY_DESCRIPTION IS NOT NULL ) VALUE_TYPE_CAPEX ON ACTIVITIES_DTLS_8.ORBIS_ID = VALUE_TYPE_CAPEX.ORBIS_ID AND ACTIVITIES_DTLS_8.ACTIVITY_DESCRIPTION = VALUE_TYPE_CAPEX.ACTIVITY_DESCRIPTION AND ACTIVITIES_DTLS_8.PRODUCED_DATE = VALUE_TYPE_CAPEX.PRODUCED_DATE QUALIFY ROW_NUMBER() OVER ( PARTITION BY ACTIVITIES_DTLS_8.ORBIS_ID ,ACTIVITIES_DTLS_8.ACTIVITY_DESCRIPTION ORDER BY ACTIVITIES_DTLS_8.PRODUCED_DATE DESC ) = 1 ) \n" +
                ",ACTIVITIES_DTLS_10    AS ( SELECT DISTINCT ACTIVITIES_DTLS_9.ORBIS_ID ,ACTIVITIES_DTLS_9.ACTIVITY_DESCRIPTION ,ISIN ,VIGEO_KEY ,TITLE ,ZONE ,COUNTRY_OF_INCORPORATION ,GENERIC_SECTOR ,REPORTING_YEAR ,ENVIRONMENTAL_OBJECTIVE ,CONTRBTN_TYPE_TURNOVER ,CONTRBTN_TYPE_CAPEX ,ACTIVITY_TURNOVER ,VALUE_TYPE_TURNOVER ,SOURCE_TURNOVER ,COMMENT_TURNOVER ,ACTIVITY_CAPEX ,VALUE_TYPE_CAPEX ,SOURCE_CAPEX ,ACTIVITIES_DTLS_9.PRODUCED_DATE FROM ACTIVITIES_DTLS_9 LEFT JOIN ( SELECT ORBIS_ID ,ACTIVITY_DESCRIPTION ,ATTRIBUTE_VALUE AS SOURCE_CAPEX ,PRODUCED_DATE FROM EU_TAXONOMY_ACTIVITIES WHERE DATA_TYPE = 'activity_level_source' AND ATTRIBUTE_LEVEL = 'CAPEX' AND ACTIVITY_DESCRIPTION IS NOT NULL ) SOURCE_CAPEX ON ACTIVITIES_DTLS_9.ORBIS_ID = SOURCE_CAPEX.ORBIS_ID AND ACTIVITIES_DTLS_9.ACTIVITY_DESCRIPTION = SOURCE_CAPEX.ACTIVITY_DESCRIPTION AND ACTIVITIES_DTLS_9.PRODUCED_DATE = SOURCE_CAPEX.PRODUCED_DATE QUALIFY ROW_NUMBER() OVER ( PARTITION BY ACTIVITIES_DTLS_9.ORBIS_ID ,ACTIVITIES_DTLS_9.ACTIVITY_DESCRIPTION ORDER BY ACTIVITIES_DTLS_9.PRODUCED_DATE DESC ) = 1 ) \n" +
                ",ACTIVITIES_DTLS_11    AS ( SELECT DISTINCT ACTIVITIES_DTLS_10.ORBIS_ID ,ACTIVITIES_DTLS_10.ACTIVITY_DESCRIPTION ,ISIN ,VIGEO_KEY ,TITLE ,ZONE ,COUNTRY_OF_INCORPORATION ,GENERIC_SECTOR ,REPORTING_YEAR ,ENVIRONMENTAL_OBJECTIVE ,CONTRBTN_TYPE_TURNOVER ,CONTRBTN_TYPE_CAPEX ,ACTIVITY_TURNOVER ,VALUE_TYPE_TURNOVER ,SOURCE_TURNOVER ,COMMENT_TURNOVER ,ACTIVITY_CAPEX ,VALUE_TYPE_CAPEX ,SOURCE_CAPEX ,COMMENT_CAPEX ,ACTIVITIES_DTLS_10.PRODUCED_DATE FROM ACTIVITIES_DTLS_10 LEFT JOIN ( SELECT ORBIS_ID ,ACTIVITY_DESCRIPTION ,PRODUCED_DATE ,ATTRIBUTE_VALUE AS COMMENT_CAPEX FROM EU_TAXONOMY_ACTIVITIES WHERE DATA_TYPE = 'activity_level_comment' AND ATTRIBUTE_LEVEL = 'CAPEX' AND ACTIVITY_DESCRIPTION IS NOT NULL ) COMMENT_CAPEX ON ACTIVITIES_DTLS_10.ORBIS_ID = COMMENT_CAPEX.ORBIS_ID AND ACTIVITIES_DTLS_10.ACTIVITY_DESCRIPTION = COMMENT_CAPEX.ACTIVITY_DESCRIPTION AND ACTIVITIES_DTLS_10.PRODUCED_DATE = COMMENT_CAPEX.PRODUCED_DATE QUALIFY ROW_NUMBER() OVER ( PARTITION BY ACTIVITIES_DTLS_10.ORBIS_ID ,ACTIVITIES_DTLS_10.ACTIVITY_DESCRIPTION ORDER BY ACTIVITIES_DTLS_10.PRODUCED_DATE DESC ) = 1 )\n" +
                 "SELECT ORBIS_ID AS \"BVD9 ID\",VIGEO_KEY AS \"VIGEO KEY\",ISIN AS \"ISIN\",TITLE AS \"TITLE\"\n" +
                ",ZONE AS \"ZONE\",COUNTRY_OF_INCORPORATION AS \"COUNTRY\",GENERIC_SECTOR AS \"GENERIC SECTOR\",REPORTING_YEAR AS \"REPORTING YEAR\"\n" +
                ",ENVIRONMENTAL_OBJECTIVE AS \"ENVIRONMENTAL OBJECTIVE\",IFF(ENVIRONMENTAL_OBJECTIVE = 'CLIMATE CHANGE MITIGATION', CONTRBTN_TYPE_TURNOVER, NULL) AS \"TYPE OF CONTRIBUTION TO CLIMATE CHANGE MITIGATION (TURNOVER)\"\n" +
                ",IFF(ENVIRONMENTAL_OBJECTIVE = 'CLIMATE CHANGE MITIGATION', CONTRBTN_TYPE_CAPEX, NULL) AS \"TYPE OF CONTRIBUTION TO CLIMATE CHANGE MITIGATION (CAPEX)\"\n" +
                ",IFF(ENVIRONMENTAL_OBJECTIVE = 'CLIMATE CHANGE ADAPTATION', CONTRBTN_TYPE_TURNOVER, NULL) AS \"TYPE OF CONTRIBUTION TO CLIMATE CHANGE ADAPTATION (TURNOVER)\"\n" +
                ",IFF(ENVIRONMENTAL_OBJECTIVE = 'CLIMATE CHANGE ADAPTATION', CONTRBTN_TYPE_CAPEX, NULL) AS \"TYPE OF CONTRIBUTION TO CLIMATE CHANGE ADAPTATION (CAPEX)\"\n" +
                ",ACTIVITY_TURNOVER AS \"ACTIVITY TURNOVER (% OF TOTAL COMPANY TURNOVER)\",VALUE_TYPE_TURNOVER AS \"VALUE TYPE (ACTIVITY TURNOVER)\"\n" +
                ",SOURCE_TURNOVER AS \"SOURCE (ACTIVITY TURNOVER)\",COMMENT_TURNOVER AS \"COMMENT (ACTIVITY TURNOVER)\"\n" +
                ",ACTIVITY_CAPEX AS \"ACTIVITY CAPEX (% OF TOTAL COMPANY CAPEX)\",VALUE_TYPE_CAPEX AS \"VALUE TYPE (ACTIVITY CAPEX)\",SOURCE_CAPEX AS \"SOURCE (ACTIVITY CAPEX)\"\n" +
                ",COMMENT_CAPEX AS \"COMMENT (ACTIVITY CAPEX)\"FROM ACTIVITIES_DTLS_11\n";
        return getQueryResultMap(query);
    }

    public List<Map<String, Object>> getGreenInvestmentRatio(String portfolioId, String derivat, String cash) {

        String query = "WITH uih  AS (  SELECT DISTINCT DF.BVD9_NUMBER,ISS.ISIN,DF.COUNTRY_NAME  ,ROUND(SUM(DIV0(VALUE, MIDRATE)) OVER (PARTITION BY df.BVD9_NUMBER), 2) AS EXPOSURE_AMNT_IN_EUR  FROM DF_TARGET.DF_PORTFOLIO df  INNER JOIN DF_TARGET.ESG_ENTITY_MASTER eem ON eem.ORBIS_ID = df.BVD9_NUMBER   \n" +
                "INNER JOIN (  SELECT FROMCURRCODE ,TOCURRCODE ,MIDRATE  FROM DF_LOOKUP.FX_RATE WHERE TOCURRCODE = 'EUR' QUALIFY ROW_NUMBER() OVER (  PARTITION BY FROMCURRCODE  ,TOCURRCODE ORDER BY EXRATEDATE DESC NULLS LAST ,CREATE_DATE_TIME DESC ,MODIFY_DATE_TIME DESC  ) = 1  ) fx_rate ON fx_rate.FROMCURRCODE = df.CURRENCY  INNER JOIN DF_DERIVED.ISIN_SORTED ISS ON eem.ORBIS_ID = ISS.BVD9_NUMBER  AND PRIMARY_ISIN = 'Y' " +
                " WHERE PORTFOLIO_ID = '"+portfolioId+"' AND df.BVD9_NUMBER IS NOT NULL  ),  not_covered as  (select BVD9_NUMBER, EXPOSURE_AMNT_IN_EUR from uih  minus  select distinct  uih.bvd9_number, EXPOSURE_AMNT_IN_EUR from  uih  join df_target.EU_TAXONOMY_OVERVIEW eto on eto.orbis_id = uih.bvd9_number),  tc as  (SELECT  eto.orbis_id, COUNTRY_NAME,  (CASE WHEN COUNTRY_NAME IN('Austria','Belgium','Bulgaria','Croatia','Cyprus','Czech Republic','Denmark','Estonia','Finland','France','Germany','Greece','Hungary','Ireland','Italy',  'Latvia','Lithuania','Luxembourg','Malta','Netherlands','Poland','Portugal','Romania','Slovakia','Slovenia','Spain','Sweden') THEN 'EU' ELSE 'NOT_EU' END) AS COUNTRY_CODE ,  EXPOSURE_AMNT_IN_EUR, eto.ENTITY_TYPE, eto.ATTRIBUTE_value  as NFRD_SCOPE FROM uih  join df_target.EU_TAXONOMY_OVERVIEW eto on eto.orbis_id = uih.bvd9_number  where DATA_TYPE = 'scope' AND ATTRIBUTE_TYPE = 'nfrd'  QUALIFY ROW_NUMBER() OVER (  PARTITION BY ORBIS_ID ORDER BY PRODUCED_DATE DESC  ) = 1 ),\n" +
                " \n" +
                "EAT AS (select tc.orbis_id, COUNTRY_NAME, COUNTRY_CODE, tc.EXPOSURE_AMNT_IN_EUR, tc.ENTITY_TYPE,  tc.NFRD_SCOPE, eto.ATTRIBUTE_value as EU_ALIGNED_TURNOVER  from tc  join df_target.EU_TAXONOMY_OVERVIEW eto\n" +
                "on eto.orbis_id = tc.orbis_id  where data_type = 'taxonomy_aligned' and  ATTRIBUTE_LEVEL = 'TURNOVER'\n" +
                "QUALIFY ROW_NUMBER() OVER (PARTITION BY eto.ORBIS_ID ORDER BY PRODUCED_DATE DESC)=1),\n" +
                " \n" +
                "EAC AS (select EAT.orbis_id, COUNTRY_NAME, COUNTRY_CODE, EAT.EXPOSURE_AMNT_IN_EUR, EAT.ENTITY_TYPE,  EAT.NFRD_SCOPE, REPLACE(EAT.EU_ALIGNED_TURNOVER, '%','') EU_ALIGNED_TURNOVER ,\n" +
                "REPLACE(ETO.ATTRIBUTE_value, '%','') AS  EU_ALIGNED_CAPEX  from EAT  join df_target.EU_TAXONOMY_OVERVIEW eto\n" +
                "on eto.orbis_id = EAT.orbis_id  where data_type = 'taxonomy_aligned' and  ATTRIBUTE_LEVEL = 'CAPEX'\n" +
                "QUALIFY ROW_NUMBER() OVER (PARTITION BY eto.ORBIS_ID ORDER BY PRODUCED_DATE DESC)=1),\n" +
                "  \n" +
                "COVERAGE AS (select EAC.orbis_id, COUNTRY_NAME, COUNTRY_CODE, EAC.EXPOSURE_AMNT_IN_EUR, EAC.ENTITY_TYPE,  EAC.NFRD_SCOPE, EAC.EU_ALIGNED_TURNOVER , EAC.EU_ALIGNED_CAPEX , \n" +
                "(case when ETO.ATTRIBUTE_value = 'YES' THEN 'COVERED' ELSE 'NOT_COVERED' END) AS COVERAGE from EAC  join df_target.EU_TAXONOMY_OVERVIEW eto\n" +
                "on eto.orbis_id = EAC.orbis_id  where data_type = 'taxonomy_alignment_flag'\n" +
                "QUALIFY ROW_NUMBER() OVER (PARTITION BY eto.ORBIS_ID ORDER BY PRODUCED_DATE DESC)=1),  \n" +
                " \n" +
                "EET  AS (select COVERAGE.orbis_id, COUNTRY_NAME, COUNTRY_CODE, COVERAGE.EXPOSURE_AMNT_IN_EUR, COVERAGE.ENTITY_TYPE,  COVERAGE.NFRD_SCOPE, COVERAGE.EU_ALIGNED_TURNOVER , COVERAGE.EU_ALIGNED_CAPEX , \n" +
                "COVERAGE.COVERAGE, REPLACE(ETO.ATTRIBUTE_value, '%','') AS  EU_ELIGIBLE_TURNOVER  FROM COVERAGE JOIN  df_target.EU_TAXONOMY_OVERVIEW eto\n" +
                "on eto.orbis_id = COVERAGE.orbis_id  where data_type = 'taxonomy_eligibility' and  ATTRIBUTE_LEVEL = 'TURNOVER'\n" +
                "QUALIFY ROW_NUMBER() OVER (PARTITION BY eto.ORBIS_ID ORDER BY PRODUCED_DATE DESC)=1 ),\n" +
                " \n" +
                "EEC AS (select EET.orbis_id, COUNTRY_NAME, COUNTRY_CODE, EET.EXPOSURE_AMNT_IN_EUR, EET.ENTITY_TYPE,  EET.NFRD_SCOPE, EET.EU_ALIGNED_TURNOVER , EET.EU_ALIGNED_CAPEX , \n" +
                "EET.COVERAGE, EET.EU_ELIGIBLE_TURNOVER, REPLACE(ETO.ATTRIBUTE_value, '%','') AS  EU_ELIGIBLE_CAPEX  FROM EET JOIN  df_target.EU_TAXONOMY_OVERVIEW eto\n" +
                "on eto.orbis_id = EET.orbis_id  where data_type = 'taxonomy_eligibility' and  ATTRIBUTE_LEVEL = 'CAPEX'\n" +
                "QUALIFY ROW_NUMBER() OVER (PARTITION BY eto.ORBIS_ID ORDER BY PRODUCED_DATE DESC)=1),\n" +
                " \n" +
                "  \n" +
                "CCMT AS (select EEC.orbis_id, COUNTRY_NAME, COUNTRY_CODE, EEC.EXPOSURE_AMNT_IN_EUR, EEC.ENTITY_TYPE,  EEC.NFRD_SCOPE, EEC.EU_ALIGNED_TURNOVER , EEC.EU_ALIGNED_CAPEX , \n" +
                "EEC.COVERAGE, EEC.EU_ELIGIBLE_TURNOVER, EEC.EU_ELIGIBLE_CAPEX, REPLACE(ETO.ATTRIBUTE_value, '%','') AS  CLIMATE_MITIGATION_TURNOVER  FROM EEC JOIN  df_target.EU_TAXONOMY_OVERVIEW eto\n" +
                "on eto.orbis_id = EEC.orbis_id  where ATTRIBUTE_TYPE = 'CLIMATE CHANGE MITIGATION' and  ATTRIBUTE_LEVEL = 'TURNOVER'\n" +
                "QUALIFY ROW_NUMBER() OVER (PARTITION BY eto.ORBIS_ID ORDER BY PRODUCED_DATE DESC)=1 ),\n" +
                "  \n" +
                "  CCMC AS (select CCMT.orbis_id, COUNTRY_NAME, COUNTRY_CODE, CCMT.EXPOSURE_AMNT_IN_EUR, CCMT.ENTITY_TYPE,  CCMT.NFRD_SCOPE, CCMT.EU_ALIGNED_TURNOVER , CCMT.EU_ALIGNED_CAPEX , \n" +
                "CCMT.COVERAGE, CCMT.EU_ELIGIBLE_TURNOVER, CCMT.EU_ELIGIBLE_CAPEX, CCMT.CLIMATE_MITIGATION_TURNOVER, REPLACE(ETO.ATTRIBUTE_value, '%','') AS  CLIMATE_MITIGATION_CAPEX  FROM CCMT JOIN  df_target.EU_TAXONOMY_OVERVIEW eto\n" +
                "  on eto.orbis_id = CCMT.orbis_id  where ATTRIBUTE_TYPE = 'CLIMATE CHANGE MITIGATION' and  ATTRIBUTE_LEVEL = 'CAPEX'\n" +
                "  QUALIFY ROW_NUMBER() OVER (PARTITION BY eto.ORBIS_ID ORDER BY PRODUCED_DATE DESC)=1),\n" +
                "  \n" +
                " CCDT AS (select CCMC.orbis_id, COUNTRY_NAME, COUNTRY_CODE, CCMC.EXPOSURE_AMNT_IN_EUR, CCMC.ENTITY_TYPE,  CCMC.NFRD_SCOPE, CCMC.EU_ALIGNED_TURNOVER , CCMC.EU_ALIGNED_CAPEX , \n" +
                "CCMC.COVERAGE, CCMC.EU_ELIGIBLE_TURNOVER, CCMC.EU_ELIGIBLE_CAPEX, CCMC.CLIMATE_MITIGATION_TURNOVER, CCMC.CLIMATE_MITIGATION_CAPEX, REPLACE(ETO.ATTRIBUTE_value, '%','') AS  CLIMATE_ADAPTATION_TURNOVER FROM CCMC JOIN df_target.EU_TAXONOMY_OVERVIEW eto\n" +
                "  on eto.orbis_id = CCMC.orbis_id  where ATTRIBUTE_TYPE = 'CLIMATE CHANGE ADAPTATION' and  ATTRIBUTE_LEVEL = 'TURNOVER'\n" +
                "  QUALIFY ROW_NUMBER() OVER (PARTITION BY eto.ORBIS_ID ORDER BY PRODUCED_DATE DESC)=1) , \n" +
                "  \n" +
                " CCDC AS (select CCDT.orbis_id, COUNTRY_NAME, COUNTRY_CODE, CCDT.EXPOSURE_AMNT_IN_EUR, CCDT.ENTITY_TYPE,  CCDT.NFRD_SCOPE, CCDT.EU_ALIGNED_TURNOVER , CCDT.EU_ALIGNED_CAPEX , \n" +
                "CCDT.COVERAGE, CCDT.EU_ELIGIBLE_TURNOVER, CCDT.EU_ELIGIBLE_CAPEX, CCDT.CLIMATE_MITIGATION_TURNOVER, CCDT.CLIMATE_MITIGATION_CAPEX, CCDT.CLIMATE_ADAPTATION_TURNOVER,\n" +
                " REPLACE(ETO.ATTRIBUTE_value, '%','') AS  CLIMATE_ADAPTATION_CAPEX FROM CCDT  JOIN df_target.EU_TAXONOMY_OVERVIEW eto\n" +
                "  on eto.orbis_id = CCDT.orbis_id  where ATTRIBUTE_TYPE = 'CLIMATE CHANGE ADAPTATION' and  ATTRIBUTE_LEVEL = 'CAPEX'\n" +
                "  QUALIFY ROW_NUMBER() OVER (PARTITION BY eto.ORBIS_ID ORDER BY PRODUCED_DATE DESC)=1 \n" +
                " \n" +
                "  union all  \n" +
                "  select  'derivatives' as orbis_id, null, null, '"+derivat+"' as  EXPOSURE_AMNT_IN_EUR, null, null, null, null, null, null, null, null, null, null, null\n" +
                "  union all\n" +
                "  select  'cash' as orbis_id,null, null,  '"+cash+"'  as  EXPOSURE_AMNT_IN_EUR, null,  null, null, null, null, null, null, null, null, null, null\n" +
                " ), \n" +
                " TEM AS (  \n" +
                "  select sum(case when ENTITY_TYPE = 'SOVEREIGN' then 0 else EXPOSURE_AMNT_IN_EUR end) as total_exposure_amount ,\n" +
                " (CASE WHEN sum(case when ENTITY_TYPE IN ('FINANCIAL','NON-FINANCIAL') AND NFRD_SCOPE = 'YES'  then EXPOSURE_AMNT_IN_EUR else 0 end) = 0 THEN NULL ELSE sum(case when ENTITY_TYPE IN ('FINANCIAL','NON-FINANCIAL') AND NFRD_SCOPE = 'YES'  then EXPOSURE_AMNT_IN_EUR else 0 end)  END) AS DENOM\n" +
                "  \n" +
                " from  CCDC),\n" +
                "  \n" +
                "  KPI_DATA AS (SELECT orbis_id, COUNTRY_NAME, COUNTRY_CODE, EXPOSURE_AMNT_IN_EUR,  round(EXPOSURE_AMNT_IN_EUR/(select total_exposure_amount from TEM) * 100, 2) as Weight_in_Portfolio,  \n" +
                "ENTITY_TYPE, NFRD_SCOPE, REPLACE(EU_ALIGNED_TURNOVER, 'NI',0) AS EU_ALIGNED_TURNOVER,  REPLACE(EU_ALIGNED_CAPEX, 'NI',0) AS EU_ALIGNED_CAPEX,\n" +
                "(case when COUNTRY_NAME = 'NO' THEN 'NOT_COVERED' WHEN COUNTRY_NAME IS NULL THEN 'DER_CASH' ELSE 'COVERED' END)  COVERAGE,\n" +
                "REPLACE(EU_ELIGIBLE_TURNOVER, 'NI',0) AS EU_ELIGIBLE_TURNOVER,  REPLACE(EU_ELIGIBLE_CAPEX,'NI',0) AS EU_ELIGIBLE_CAPEX, REPLACE(CLIMATE_MITIGATION_TURNOVER,'NI',0) AS CLIMATE_MITIGATION_TURNOVER, REPLACE(CLIMATE_MITIGATION_CAPEX, 'NI',0) AS CLIMATE_MITIGATION_CAPEX,\n" +
                " REPLACE(CLIMATE_ADAPTATION_TURNOVER,'NI',0) AS CLIMATE_ADAPTATION_TURNOVER, REPLACE(CLIMATE_ADAPTATION_CAPEX,'NI',0) AS CLIMATE_ADAPTATION_CAPEX  FROM CCDC),\n" +
                " KPI_2_DATA AS (SELECT * FROM CCDC  UNION ALL  \n" +
                "\n" +
                " SELECT BVD9_NUMBER, 'NO', null, EXPOSURE_AMNT_IN_EUR, null, null, null, null, null, null, null, null, null, null, null from not_covered),\n" +
                " \n" +
                " AE0 AS (select KPI_DATA.*,  ETA.ATTRIBUTE_value AS  OBJECTIVE, ETA.PRODUCED_DATE  FROM KPI_DATA LEFT OUTER JOIN (SELECT ORBIS_ID, ATTRIBUTE_value, PRODUCED_DATE FROM df_target.EU_TAXONOMY_ACTIVITIES\n" +
                " where DATA_TYPE = 'activity_environmental_objectives' QUALIFY ROW_NUMBER() OVER (PARTITION BY ORBIS_ID ORDER BY PRODUCED_DATE DESC)=1) ETA\n" +
                "  on ETA.orbis_id = KPI_DATA.orbis_id ),\n" +
                " \n" +
                "  ACT_T0 AS ( SELECT AE0.*,  ACT.ATTRIBUTE_VALUE AS ACTIVITY_TURNOVER, ACTIVITY_NACE_CODE_1, ACTIVITY_DESCRIPTION FROM AE0 LEFT OUTER JOIN ( SELECT DISTINCT ORBIS_ID, ATTRIBUTE_VALUE, ACTIVITY_NACE_CODE_1, ACTIVITY_DESCRIPTION, PRODUCED_DATE \n" +
                "  FROM df_target.EU_TAXONOMY_ACTIVITIES ACT\n" +
                " WHERE DATA_TYPE = 'activity_sub_cont_contribution_type'\n" +
                "  AND ATTRIBUTE_LEVEL = 'TURNOVER' AND ATTRIBUTE_VALUE <> 'OWN PERFORMANCE'\n" +
                "  AND ACTIVITY_DESCRIPTION IS NOT NULL) ACT ON AE0.ORBIS_ID = ACT.ORBIS_ID  and AE0.PRODUCED_DATE = ACT.PRODUCED_DATE\n" +
                "QUALIFY ROW_NUMBER() OVER (PARTITION BY ACT.ORBIS_ID, ACTIVITY_DESCRIPTION  ORDER BY  ACT.PRODUCED_DATE DESC)=1), \n" +
                "  ACT_TO_V AS (SELECT  ACT_T0.* , REPLACE(REPLACE(ATTRIBUTE_VALUE, 'NI',0), '%','')  AS EN_TURN  FROM ACT_T0 JOIN ( SELECT DISTINCT ORBIS_ID, ATTRIBUTE_VALUE, ACTIVITY_NACE_CODE_1 ,\n" +
                " ACTIVITY_DESCRIPTION, PRODUCED_DATE\n" +
                "  FROM df_target.EU_TAXONOMY_ACTIVITIES ACT\n" +
                " WHERE DATA_TYPE = 'activity_sub_cont_env_obj_share_aligned_criteria_perc'\n" +
                "  AND ATTRIBUTE_LEVEL = 'TURNOVER' \n" +
                "  AND ACTIVITY_DESCRIPTION IS NOT NULL ) ACT ON ACT_T0.ORBIS_ID = ACT.ORBIS_ID  and ACT_T0.PRODUCED_DATE = ACT.PRODUCED_DATE\n" +
                " and ACT_T0.ACTIVITY_DESCRIPTION = ACT.ACTIVITY_DESCRIPTION\n" +
                "  QUALIFY ROW_NUMBER() OVER (PARTITION BY ACT.ORBIS_ID, ACT.ACTIVITY_DESCRIPTION ORDER BY ACT.PRODUCED_DATE DESC)=1),\n" +
                " \n" +
                " ACT_CP AS ( SELECT AE0.*,  ACT.ATTRIBUTE_VALUE AS ACTIVITY_CAPEX, ACTIVITY_NACE_CODE_1, ACTIVITY_DESCRIPTION FROM AE0 LEFT OUTER JOIN ( SELECT DISTINCT ORBIS_ID, ATTRIBUTE_VALUE,\n" +
                " ACTIVITY_NACE_CODE_1, ACTIVITY_DESCRIPTION , PRODUCED_DATE\n" +
                "  FROM df_target.EU_TAXONOMY_ACTIVITIES ACT\n" +
                " WHERE DATA_TYPE = 'activity_sub_cont_contribution_type'\n" +
                "  AND ATTRIBUTE_LEVEL = 'CAPEX' AND ATTRIBUTE_VALUE <> 'OWN PERFORMANCE'\n" +
                "  AND ACTIVITY_DESCRIPTION IS NOT NULL) ACT ON AE0.ORBIS_ID = ACT.ORBIS_ID AND  AE0.PRODUCED_DATE = ACT.PRODUCED_DATE\n" +
                "  QUALIFY ROW_NUMBER() OVER (PARTITION BY ACT.ORBIS_ID, ACT.ACTIVITY_DESCRIPTION  ORDER BY ACT.PRODUCED_DATE DESC)=1), \n" +
                " \n" +
                "\n" +
                " ACT_TO_CP AS (SELECT  ACT_CP.* , REPLACE(REPLACE(ATTRIBUTE_VALUE, 'NI',0), '%','')  AS EN_CAP FROM ACT_CP JOIN ( SELECT DISTINCT ORBIS_ID, ATTRIBUTE_VALUE, ACTIVITY_NACE_CODE_1 , ACTIVITY_DESCRIPTION, PRODUCED_DATE\n" +
                "  FROM df_target.EU_TAXONOMY_ACTIVITIES ACT\n" +
                " WHERE DATA_TYPE = 'activity_sub_cont_env_obj_share_aligned_criteria_perc'\n" +
                "  AND ATTRIBUTE_LEVEL = 'CAPEX' \n" +
                "  AND ACTIVITY_DESCRIPTION IS NOT NULL ) ACT ON ACT_CP.ORBIS_ID = ACT.ORBIS_ID  and ACT_CP.PRODUCED_DATE = ACT.PRODUCED_DATE\n" +
                " and ACT_CP.ACTIVITY_DESCRIPTION = ACT.ACTIVITY_DESCRIPTION\n" +
                " QUALIFY ROW_NUMBER() OVER (PARTITION BY ACT.ORBIS_ID, ACT.ACTIVITY_DESCRIPTION  ORDER BY ACT.PRODUCED_DATE DESC)=1),\n" +
                "  \n" +
                "  \n" +
                "FINAL_OUTPUT AS  (\n" +
                "   SELECT  1 AS INDEXNUM,  'KPI_1' AS KPIS, 2 AS ROWNUM, 1 AS TAB, 'The weighted average value of all the investments that are directed at funding, or are associated with taxonomy-aligned economic activities relative to the value of total assets covered by the KPI, with following weights for investments in undertakings per below:' AS  KPI_TC, 'Turnover-based (%):' AS T,\n" +
                " ROUND(SUM(CASE WHEN NFRD_SCOPE = 'YES'  THEN Weight_in_Portfolio * EU_ALIGNED_TURNOVER/100 ELSE 0 END),2) AS VALUE FROM KPI_DATA\n" +
                " \n" +
                " UNION ALL\n" +
                "  \n" +
                " SELECT  2 AS INDEXNUM,  'KPI_1' AS KPIS, 2 AS ROWNUM,  2 AS TAB, 'The weighted average value of all the investments that are directed at funding, or are associated with taxonomy-aligned economic activities, with following weights for investments in undertakings per below: ' AS  KPI_TC, 'Turnover-based [monetary amount]:' AS T,\n" +
                " ROUND(SUM(CASE WHEN NFRD_SCOPE = 'YES'  THEN EXPOSURE_AMNT_IN_EUR * EU_ALIGNED_TURNOVER/100 ELSE 0 END),2) AS VALUE FROM KPI_DATA\n" +
                "  \n" +
                " UNION ALL \n" +
                "\n" +
                "  SELECT  3 AS INDEXNUM,  'KPI_1' AS KPIS, 3 AS ROWNUM,  1 AS TAB,'The weighted average value of all the investments that are directed at funding, or are associated with taxonomy-aligned economic activities relative to the value of total assets covered by the KPI, with following weights for investments in undertakings per below:' AS  KPI_TC, 'CapEx-based (%):' AS T,\n" +
                " ROUND(SUM(CASE WHEN NFRD_SCOPE = 'YES'  THEN Weight_in_Portfolio * EU_ALIGNED_CAPEX/100 ELSE 0 END),2) AS VALUE FROM KPI_DATA \n" +
                " UNION ALL\n" +
                " \n" +
                " SELECT  4 AS INDEXNUM,  'KPI_1' AS KPIS,3 AS ROWNUM,  2 AS TAB, 'The weighted average value of all the investments that are directed at funding, or are associated with taxonomy-aligned economic activities, with following weights for investments in undertakings per below: ' AS  KPI_TC, 'CapEx-based [monetary amount]:' AS T,\n" +
                " ROUND(SUM(CASE WHEN NFRD_SCOPE = 'YES'  THEN EXPOSURE_AMNT_IN_EUR * EU_ALIGNED_CAPEX/100 ELSE 0 END),2) AS VALUE FROM KPI_DATA\n" +
                "  \n" +
                " UNION ALL\n" +
                "  \n" +
                " SELECT  5 AS INDEXNUM,  'KPI_2' AS KPIS, 5 AS ROWNUM, 1 AS TAB, 'The percentage of assets covered by the KPI relative to total investments (total AuM). Excluding investments in sovereign entities.' AS  KPI_TC, 'Coverage ratio (%):' AS T,\n" +
                " ROUND(SUM(CASE WHEN  ENTITY_TYPE = 'SOVEREIGN' OR COUNTRY_NAME = 'NO' THEN 0 ELSE EXPOSURE_AMNT_IN_EUR END),2)\n" +
                "/ROUND(SUM(CASE WHEN ENTITY_TYPE = 'SOVEREIGN' THEN 0 ELSE EXPOSURE_AMNT_IN_EUR END),2)*100 AS VALUE FROM KPI_2_DATA\n" +
                " \n" +
                "UNION ALL\n" +
                "  \n" +
                "  SELECT  6 AS INDEXNUM,  'KPI_2' AS KPIS,5 AS ROWNUM,  2 AS TAB, 'The monetary value of assets covered by the KPI. Excluding investments in sovereign entities.' AS  KPI_TC, 'Coverage [monetary amount]:' AS T,\n" +
                " ROUND(SUM(CASE WHEN ENTITY_TYPE = 'SOVEREIGN' THEN 0 ELSE EXPOSURE_AMNT_IN_EUR END),2) AS VALUE FROM KPI_DATA\n" +
                " \n" +
                "  UNION ALL \n" +
                " \n" +
                "  SELECT  7 AS INDEXNUM,  NULL AS KPIS, 4 AS ROWNUM,  12 AS TAB, 'Additional, complementary disclosures: breakdown of denominator of the KPI' AS KPI_TC,\n" +
                " NULL AS T,  NULL AS VALUE \n" +
                " \n" +
                " \n" +
                "  UNION ALL\n" +
                "  \n" +
                "  SELECT  8 AS INDEXNUM,  'KPI_3' AS KPIS, 7 AS ROWNUM, 1 AS TAB, null AS  KPI_TC, 'The percentage of derivatives relative to total assets covered by the KPI (%):' AS T,\n" +
                " ROUND(SUM(CASE WHEN orbis_id = 'derivatives' THEN Weight_in_Portfolio ELSE 0 END),2) AS VALUE FROM KPI_DATA\n" +
                " \n" +
                "  UNION ALL\n" +
                "  \n" +
                "  SELECT 9 AS INDEXNUM,  'KPI_3' AS KPIS,7 AS ROWNUM,  2 AS TAB, null AS  KPI_TC, 'The value in monetary amounts of derivatives [monetary amount]:' AS T,\n" +
                " ROUND(SUM(CASE WHEN orbis_id = 'derivatives' THEN EXPOSURE_AMNT_IN_EUR ELSE 0 END),2) AS VALUE FROM KPI_DATA\n" +
                " \n" +
                " UNION ALL\n" +
                "  \n" +
                " SELECT  10 AS INDEXNUM,  'KPI_4' AS KPIS, 9 AS ROWNUM, 1 AS TAB, 'The proportion of exposures to EU financial and non-financial undertakings not subject to Articles 19a and 29a of Directive 2013/34/EU over total assets covered by the KPI:' AS  KPI_TC, 'For non-financial undertakings:' AS T,\n" +
                " ROUND(SUM(CASE WHEN NFRD_SCOPE = 'NO' AND ENTITY_TYPE = 'NON-FINANCIAL' AND COUNTRY_CODE = 'EU'  THEN Weight_in_Portfolio ELSE 0 END),2) AS VALUE FROM KPI_DATA\n" +
                " UNION ALL\n" +
                "  \n" +
                "  SELECT  11 AS INDEXNUM,  'KPI_4' AS KPIS,9 AS ROWNUM,  2 AS TAB, 'Value of exposures to EU financial and non-financial undertakings not subject to Articles 19a and 29a of Directive 2013/34/EU:' AS KPI_TC,\n" +
                " 'For non-financial undertakings [monetary amount]:' AS T, ROUND(SUM(CASE WHEN NFRD_SCOPE = 'NO' AND ENTITY_TYPE = 'NON-FINANCIAL' AND COUNTRY_CODE = 'EU' THEN EXPOSURE_AMNT_IN_EUR ELSE 0 END),2) AS VALUE FROM KPI_DATA\n" +
                " \n" +
                "UNION ALL\n" +
                "  \n" +
                " SELECT  12 AS INDEXNUM,  'KPI_4' AS KPIS, 10 AS ROWNUM, 1 AS TAB, 'The proportion of exposures to EU financial and non-financial undertakings not subject to Articles 19a and 29a of Directive 2013/34/EU over total assets covered by the KPI:' AS  KPI_TC, 'For financial undertakings:' AS T,\n" +
                " ROUND(SUM(CASE WHEN NFRD_SCOPE = 'NO' AND ENTITY_TYPE = 'FINANCIAL' AND COUNTRY_CODE = 'EU'  THEN Weight_in_Portfolio ELSE 0 END),2) AS VALUE FROM KPI_DATA\n" +
                " \n" +
                "UNION ALL\n" +
                "  \n" +
                "  SELECT  13 AS INDEXNUM,  'KPI_4' AS KPIS,10 AS ROWNUM,  2 AS TAB, 'Value of exposures to EU financial and non-financial undertakings not subject to Articles 19a and 29a of Directive 2013/34/EU:' AS T, 'For financial undertakings [monetary amount]:' AS T,\n" +
                " ROUND(SUM(CASE WHEN NFRD_SCOPE = 'NO' AND ENTITY_TYPE = 'FINANCIAL' AND COUNTRY_CODE = 'EU' THEN EXPOSURE_AMNT_IN_EUR ELSE 0 END),2) AS VALUE FROM KPI_DATA  \n" +
                "  \n" +
                "UNION ALL\n" +
                "  \n" +
                " SELECT  14 AS INDEXNUM,  'KPI_5' AS KPIS, 12 AS ROWNUM, 1 AS TAB, 'The proportion of exposures to financial and non-financial undertakings from non-EU countries not subject to Articles 19a and 29a of Directive 2013/34/EU over total assets covered by the KPI:' AS  KPI_TC, 'For non-financial undertakings:' AS T,\n" +
                " ROUND(SUM(CASE WHEN NFRD_SCOPE = 'NO' AND ENTITY_TYPE = 'NON-FINANCIAL' AND COUNTRY_CODE <> 'EU'  THEN Weight_in_Portfolio ELSE 0 END),2) AS VALUE FROM KPI_DATA\n" +
                "  \n" +
                "UNION ALL\n" +
                "  \n" +
                "  SELECT  15 AS INDEXNUM,  'KPI_5' AS KPIS,12 AS ROWNUM,  2 AS TAB, 'Value of exposures to financial and non-financial undertakings from non-EU countries not subject to Articles 19a and 29a of Directive 2013/34/EU:' AS KPI_TC,\n" +
                " 'For non-financial undertakings [monetary amount]:' AS T, ROUND(SUM(CASE WHEN NFRD_SCOPE = 'NO' AND ENTITY_TYPE = 'NON-FINANCIAL' AND COUNTRY_CODE <> 'EU' THEN EXPOSURE_AMNT_IN_EUR ELSE 0 END),2) AS VALUE FROM KPI_DATA\n" +
                " \n" +
                " UNION ALL\n" +
                "  \n" +
                " SELECT  16 AS INDEXNUM,  'KPI_5' AS KPIS, 13 AS ROWNUM, 1 AS TAB, 'The proportion of exposures to financial and non-financial undertakings from non-EU countries not subject to Articles 19a and 29a of Directive 2013/34/EU over total assets covered by the KPI:' AS  KPI_TC, 'For financial undertakings:' AS T,\n" +
                " ROUND(SUM(CASE WHEN NFRD_SCOPE = 'NO' AND ENTITY_TYPE = 'FINANCIAL' AND COUNTRY_CODE <> 'EU'  THEN Weight_in_Portfolio ELSE 0 END),2) AS VALUE FROM KPI_DATA\n" +
                "  \n" +
                "UNION ALL\n" +
                "  \n" +
                "  SELECT  17 AS INDEXNUM,  'KPI_5' AS KPIS,13 AS ROWNUM,  2 AS TAB, 'Value of exposures to financial and non-financial undertakings from non-EU countries not subject to Articles 19a and 29a of Directive 2013/34/EU:' AS T, 'For financial undertakings [monetary amount]:' AS T,\n" +
                " ROUND(SUM(CASE WHEN NFRD_SCOPE = 'NO' AND ENTITY_TYPE = 'FINANCIAL' AND COUNTRY_CODE <> 'EU' THEN EXPOSURE_AMNT_IN_EUR ELSE 0 END),2) AS VALUE FROM KPI_DATA\n" +
                " \n" +
                "UNION ALL\n" +
                "  \n" +
                " SELECT  18 AS INDEXNUM,  'KPI_6' AS KPIS, 15 AS ROWNUM, 1 AS TAB, 'The proportion of exposures to financial and non-financial undertakings subject to Articles 19a and 29a of Directive 2013/34/EU over total assets covered by the KPI:' AS  KPI_TC, 'For non-financial undertakings:' AS T,\n" +
                " ROUND(SUM(CASE WHEN NFRD_SCOPE = 'YES' AND ENTITY_TYPE = 'NON-FINANCIAL'  THEN Weight_in_Portfolio ELSE 0 END),2) AS VALUE FROM KPI_DATA\n" +
                "  \n" +
                "UNION ALL\n" +
                "  \n" +
                "  SELECT  19 AS INDEXNUM,  'KPI_6' AS KPIS,15 AS ROWNUM,  2 AS TAB, 'Value of exposures to financial and non-financial undertakings subject to Articles 19a and 29a of Directive 2013/34/EU:' AS KPI_TC,\n" +
                " 'For non-financial undertakings [monetary amount]:' AS T, ROUND(SUM(CASE WHEN NFRD_SCOPE = 'YES' AND ENTITY_TYPE = 'NON-FINANCIAL'  THEN EXPOSURE_AMNT_IN_EUR ELSE 0 END),2) AS VALUE FROM KPI_DATA\n" +
                " \n" +
                " UNION ALL\n" +
                "  \n" +
                " SELECT  20 AS INDEXNUM,  'KPI_6' AS KPIS, 16 AS ROWNUM, 1 AS TAB, 'The proportion of exposures to financial and non-financial undertakings subject to Articles 19a and 29a of Directive 2013/34/EU over total assets covered by the KPI:' AS  KPI_TC, 'For financial undertakings:' AS T,\n" +
                " ROUND(SUM(CASE WHEN NFRD_SCOPE = 'YES' AND ENTITY_TYPE = 'FINANCIAL' THEN Weight_in_Portfolio ELSE 0 END),2) AS VALUE FROM KPI_DATA\n" +
                "  \n" +
                "UNION ALL\n" +
                "  \n" +
                "  SELECT  21 AS INDEXNUM,  'KPI_6' AS KPIS,16 AS ROWNUM,  2 AS TAB, 'Value of exposures to financial and non-financial undertakings subject to Articles 19a and 29a of Directive 2013/34/EU:' AS T, 'For financial undertakings [monetary amount]:' AS T,\n" +
                " ROUND(SUM(CASE WHEN NFRD_SCOPE = 'YES' AND ENTITY_TYPE = 'FINANCIAL'  THEN EXPOSURE_AMNT_IN_EUR ELSE 0 END),2) AS VALUE FROM KPI_DATA\n" +
                "  \n" +
                " UNION ALL\n" +
                "  \n" +
                " SELECT  22 AS INDEXNUM,  'KPI_7' AS KPIS, 17 AS ROWNUM, 1 AS TAB, null AS  KPI_TC, 'The proportion of exposures to other counterparties over total assets covered by the KPI (%):' AS T,\n" +
                " ROUND(SUM(CASE WHEN NFRD_SCOPE = 'NI' OR orbis_id = 'cash' THEN Weight_in_Portfolio ELSE 0 END),2) AS VALUE FROM KPI_DATA\n" +
                " \n" +
                " UNION ALL\n" +
                "  \n" +
                "  SELECT  23 AS INDEXNUM,  'KPI_7' AS KPIS,17 AS ROWNUM,  2 AS TAB, null AS  KPI_TC,  'Value of exposures to other counterparties [monetary amount]:' AS T,\n" +
                " ROUND(SUM(CASE WHEN NFRD_SCOPE = 'NI' OR orbis_id = 'cash'  THEN EXPOSURE_AMNT_IN_EUR ELSE 0 END),2) AS VALUE FROM KPI_DATA\n" +
                "  \n" +
                " UNION ALL\n" +
                "  \n" +
                " SELECT  24 AS INDEXNUM,  'KPI_8' AS KPIS, 19 AS ROWNUM, 1 AS TAB, 'The value of all the investments that are funding economic activities that are not taxonomy-eligible relative to the value of total assets covered by the KPI (%):' AS  KPI_TC, 'Turnover-based (%):' AS T,\n" +
                " SUM((CASE WHEN COUNTRY_CODE IS NOT NULL THEN Weight_in_Portfolio ELSE 0 END) * (1 - IFNULL(REPLACE(EU_ELIGIBLE_TURNOVER, 'NI',0),0)/100)) AS VALUE FROM KPI_DATA\n" +
                "  \n" +
                " UNION ALL\n" +
                "  \n" +
                "  SELECT  25 AS INDEXNUM,  'KPI_8' AS KPIS,19 AS ROWNUM,  2 AS TAB, 'Value of all the investments that are funding economic activities that are not taxonomy-eligible [monetary amount]:' AS KPI_TC,\n" +
                " 'Turnover-based [monetary amount]: ' AS T,  SUM((CASE WHEN COUNTRY_CODE IS NOT NULL THEN EXPOSURE_AMNT_IN_EUR ELSE 0 END) * (1 - IFNULL(REPLACE(EU_ELIGIBLE_TURNOVER, 'NI',0),0)/100))AS VALUE FROM KPI_DATA\n" +
                " \n" +
                "  UNION ALL\n" +
                "  \n" +
                " SELECT  26 AS INDEXNUM,  'KPI_8' AS KPIS, 20 AS ROWNUM, 1 AS TAB, 'The value of all the investments that are funding economic activities that are not taxonomy-eligible relative to the value of total assets covered by the KPI (%):' AS  KPI_TC,\n" +
                " 'CapEx-based (%):' AS T,\n" +
                "  SUM((CASE WHEN COUNTRY_CODE IS NOT NULL THEN Weight_in_Portfolio ELSE 0 END) * (1 - IFNULL(REPLACE(EU_ELIGIBLE_CAPEX, 'NI',0),0)/100)) AS VALUE FROM KPI_DATA\n" +
                " \n" +
                " UNION ALL\n" +
                "  \n" +
                "  SELECT  27 AS INDEXNUM,  'KPI_8' AS KPIS,20 AS ROWNUM,  2 AS TAB, 'Value of all the investments that are funding economic activities that are not taxonomy-eligible [monetary amount]:' AS T,\n" +
                "  'CapEx-based [monetary amount]:' AS T,  SUM((CASE WHEN COUNTRY_CODE IS NOT NULL THEN EXPOSURE_AMNT_IN_EUR ELSE 0 END) * (1 - IFNULL(REPLACE(EU_ELIGIBLE_CAPEX, 'NI',0),0)/100))AS VALUE FROM KPI_DATA\n" +
                "  \n" +
                " UNION ALL\n" +
                "  \n" +
                " SELECT  28 AS INDEXNUM,  'KPI_9' AS KPIS, 22 AS ROWNUM, 1 AS TAB, 'The value of all the investments that are funding taxonomy-eligible economic activities, but not taxonomy-aligned relative to the value of total assets covered by the KPI (%):' AS  KPI_TC, 'Turnover-based (%):' AS T,\n" +
                "  SUM((CASE WHEN COUNTRY_CODE IS NOT NULL THEN Weight_in_Portfolio ELSE 0 END) * (IFNULL(REPLACE(EU_ELIGIBLE_TURNOVER, 'NI',0),0) - IFNULL(REPLACE(EU_ALIGNED_TURNOVER, 'NI',0),0))/100) AS VALUE FROM KPI_DATA\n" +
                " \n" +
                "UNION ALL\n" +
                "  \n" +
                "  SELECT  29 AS INDEXNUM,  'KPI_9' AS KPIS,22 AS ROWNUM,  2 AS TAB, 'Value of all the investments that are funding taxonomy-eligible economic activities, but not taxonomy-aligned [monetary amount]:' AS KPI_TC,\n" +
                " 'Turnover-based [monetary amount]: ' AS T, SUM((CASE WHEN COUNTRY_CODE IS NOT NULL THEN EXPOSURE_AMNT_IN_EUR ELSE 0 END) * (IFNULL(REPLACE(EU_ELIGIBLE_TURNOVER, 'NI',0),0) - IFNULL(REPLACE(EU_ALIGNED_TURNOVER, 'NI',0),0))/100) AS VALUE FROM KPI_DATA\n" +
                " \n" +
                " UNION ALL\n" +
                "  \n" +
                " SELECT  30 AS INDEXNUM,  'KPI_9' AS KPIS, 23 AS ROWNUM, 1 AS TAB, 'The value of all the investments that are funding taxonomy-eligible economic activities, but not taxonomy-aligned relative to the value of total assets covered by the KPI (%):' AS  KPI_TC,\n" +
                " 'CapEx-based (%):' AS T,\n" +
                " SUM((CASE WHEN COUNTRY_CODE IS NOT NULL THEN Weight_in_Portfolio ELSE 0 END) * (IFNULL(REPLACE(EU_ELIGIBLE_CAPEX, 'NI',0),0) - IFNULL(REPLACE(EU_ALIGNED_CAPEX, 'NI',0),0))/100) AS VALUE FROM KPI_DATA\n" +
                " \n" +
                "UNION ALL\n" +
                "  \n" +
                "  SELECT  31 AS INDEXNUM,  'KPI_9' AS KPIS,23 AS ROWNUM,  2 AS TAB, 'Value of all the investments that are funding taxonomy-eligible economic activities, but not taxonomy-aligned [monetary amount]:' AS T,\n" +
                "  'CapEx-based [monetary amount]:' AS T,  SUM((CASE WHEN COUNTRY_CODE IS NOT NULL THEN EXPOSURE_AMNT_IN_EUR ELSE 0 END) * (IFNULL(REPLACE(EU_ELIGIBLE_CAPEX, 'NI',0),0) - IFNULL(REPLACE(EU_ALIGNED_CAPEX, 'NI',0),0))/100) AS VALUE FROM KPI_DATA\n" +
                "  \n" +
                " UNION ALL\n" +
                "  \n" +
                "  SELECT  32 AS INDEXNUM,  NULL AS KPIS,17 AS ROWNUM,  12 AS TAB, 'Additional, complementary disclosures: breakdown of numerator of the KPI' AS KPI_TC,\n" +
                " NULL AS T,  NULL AS VALUE \n" +
                " \n" +
                " UNION ALL\n" +
                "  \n" +
                " SELECT  33 AS INDEXNUM,  'KPI_10' AS KPIS, 26 AS ROWNUM, 1 AS TAB, 'The proportion of Taxonomy-aligned exposures to financial and non-financial undertakings subject to Articles 19a and 29a of Directive 2013/34/EU over total assets covered by the KPI:' AS  KPI_TC, 'For non financial undertakings - Turnover-based (%)' AS T,\n" +
                " SUM((CASE WHEN ENTITY_TYPE = 'NON-FINANCIAL' AND NFRD_SCOPE = 'YES' THEN EXPOSURE_AMNT_IN_EUR ELSE 0 END)/(SELECT DENOM FROM TEM) * IFNULL(REPLACE(EU_ALIGNED_TURNOVER, 'NI',0),0)) AS VALUE FROM KPI_DATA\n" +
                "  \n" +
                "  UNION ALL\n" +
                "  \n" +
                "  SELECT  34 AS INDEXNUM,  'KPI_10' AS KPIS,26 AS ROWNUM,  2 AS TAB, 'Value of Taxonomy-aligned exposures to financial and non-financial undertakings subject to Articles 19a and 29a of Directive 2013/34/EU:' AS KPI_TC,\n" +
                " 'For non financial undertakings - Turnover-based (monetary amount):' AS T, \n" +
                "SUM((CASE WHEN NFRD_SCOPE = 'YES' AND  COUNTRY_CODE IS NOT NULL  AND  ENTITY_TYPE = 'NON-FINANCIAL' THEN EXPOSURE_AMNT_IN_EUR ELSE 0 END) *  IFNULL(REPLACE(EU_ALIGNED_TURNOVER, 'NI',0),0)/100)AS VALUE FROM KPI_DATA\n" +
                " \n" +
                " UNION ALL\n" +
                "  \n" +
                " SELECT  35 AS INDEXNUM,  'KPI_10' AS KPIS, 27 AS ROWNUM, 1 AS TAB, 'The proportion of Taxonomy-aligned exposures to financial and non-financial undertakings subject to Articles 19a and 29a of Directive 2013/34/EU over total assets covered by the KPI:' AS  KPI_TC,  'For non financial undertakings - Capital expenditures-based (%)' AS T,\n" +
                "  SUM((CASE WHEN ENTITY_TYPE = 'NON-FINANCIAL' AND NFRD_SCOPE = 'YES' THEN EXPOSURE_AMNT_IN_EUR ELSE 0 END)/(SELECT DENOM FROM TEM) * IFNULL(REPLACE(EU_ALIGNED_CAPEX, 'NI',0),0)) AS VALUE FROM KPI_DATA\n" +
                " \n" +
                " UNION ALL\n" +
                "  \n" +
                "  SELECT  36 AS INDEXNUM,  'KPI_10' AS KPIS,27 AS ROWNUM,  2 AS TAB, 'Value of Taxonomy-aligned exposures to financial and non-financial undertakings subject to Articles 19a and 29a of Directive 2013/34/EU:' AS KPI_TC,\n" +
                "  'For non financial undertakings - Capital expenditures-based (monetary amount):' AS T, \n" +
                " SUM((CASE WHEN NFRD_SCOPE = 'YES' AND  COUNTRY_CODE IS NOT NULL  AND  ENTITY_TYPE = 'NON-FINANCIAL' THEN EXPOSURE_AMNT_IN_EUR ELSE 0 END) *  IFNULL(REPLACE(EU_ALIGNED_CAPEX, 'NI',0),0)/100)AS VALUE FROM KPI_DATA\n" +
                "  \n" +
                "  UNION ALL\n" +
                "  \n" +
                " SELECT  37 AS INDEXNUM,  'KPI_10' AS KPIS, 28 AS ROWNUM, 1 AS TAB, 'The proportion of Taxonomy-aligned exposures to financial and non-financial undertakings subject to Articles 19a and 29a of Directive 2013/34/EU over total assets covered by the KPI:\n" +
                "' AS KPI_TC, 'For financial undertakings - Turnover-based (%)' AS T,\n" +
                "  SUM((CASE WHEN ENTITY_TYPE = 'FINANCIAL' AND NFRD_SCOPE = 'YES' THEN EXPOSURE_AMNT_IN_EUR ELSE 0 END)/(SELECT DENOM FROM TEM) * IFNULL(REPLACE(EU_ALIGNED_TURNOVER, 'NI',0),0)) AS VALUE FROM KPI_DATA\n" +
                "  \n" +
                "  UNION ALL\n" +
                "  \n" +
                "  SELECT  38 AS INDEXNUM,  'KPI_10' AS KPIS,28 AS ROWNUM,  2 AS TAB, 'Value of Taxonomy-aligned exposures to financial and non-financial undertakings subject to Articles 19a and 29a of Directive 2013/34/EU:' AS KPI_TC,\n" +
                " 'For financial undertakings - Turnover-based (monetary amount):' AS T,\n" +
                " SUM((CASE WHEN NFRD_SCOPE = 'YES' AND  COUNTRY_CODE IS NOT NULL  AND  ENTITY_TYPE = 'FINANCIAL' THEN EXPOSURE_AMNT_IN_EUR ELSE 0 END) *  IFNULL(REPLACE(EU_ALIGNED_TURNOVER, 'NI',0),0)/100)AS VALUE FROM KPI_DATA\n" +
                "  \n" +
                "UNION ALL\n" +
                "  \n" +
                " SELECT  39 AS INDEXNUM,  'KPI_10' AS KPIS, 29 AS ROWNUM, 1 AS TAB, 'The proportion of Taxonomy-aligned exposures to financial and non-financial undertakings subject to Articles 19a and 29a of Directive 2013/34/EU over total assets covered by the KPI:' AS  KPI_TC,\n" +
                " 'For financial undertakings - Capital expenditures-based (%)' AS T,\n" +
                " SUM((CASE WHEN ENTITY_TYPE = 'FINANCIAL'AND NFRD_SCOPE = 'YES' THEN EXPOSURE_AMNT_IN_EUR ELSE 0 END)/(SELECT DENOM FROM TEM) * IFNULL(REPLACE(EU_ALIGNED_CAPEX, 'NI',0),0)) AS VALUE FROM KPI_DATA\n" +
                "  \n" +
                "UNION ALL\n" +
                "  \n" +
                " SELECT  40 AS INDEXNUM,  'KPI_10' AS KPIS,29 AS ROWNUM,  2 AS TAB, 'Value of Taxonomy-aligned exposures to financial and non-financial undertakings subject to Articles 19a and 29a of Directive 2013/34/EU:' AS T,\n" +
                " 'For financial undertakings - Capital expenditures-based (monetary amount):' AS T, \n" +
                "SUM((CASE WHEN NFRD_SCOPE = 'YES' AND  COUNTRY_CODE IS NOT NULL  AND  ENTITY_TYPE = 'FINANCIAL' THEN EXPOSURE_AMNT_IN_EUR ELSE 0 END) *  IFNULL(REPLACE(EU_ALIGNED_CAPEX, 'NI',0),0)/100)AS VALUE\n" +
                "FROM KPI_DATA\n" +
                "  \n" +
                "--UNION ALL\n" +
                "  \n" +
                "-- SELECT  41 AS INDEXNUM,  'KPI_11' AS KPIS, 22 AS ROWNUM, 1 AS TAB, 'The proportion of taxonomy-aligned exposures to other counterparties in over total assets covered by the KPI:\n" +
                "--' AS KPI_TC, 'Turnover-based (%):' AS T,  0 AS VALUE\n" +
                "\n" +
                "--UNION ALL\n" +
                "  \n" +
                "--  SELECT  42 AS INDEXNUM,  'KPI_11' AS KPIS,22 AS ROWNUM,  2 AS TAB, 'Value of taxonomy-aligned exposures to other counterparties:' AS KPI_TC, 'Turnover-based (monetary amount):' AS T, 0 AS VALUE \n" +
                " \n" +
                " --UNION ALL\n" +
                "  \n" +
                " --SELECT  43 AS INDEXNUM,  'KPI_11' AS KPIS, 23 AS ROWNUM, 1 AS TAB, 'The proportion of taxonomy-aligned exposures to other counterparties in over total assets covered by the KPI:\n" +
                "--' AS  KPI_TC,  'Capital expenditures-based (%)' AS T, 0 AS VALUE \n" +
                " \n" +
                " --UNION ALL\n" +
                "  \n" +
                " --SELECT  44 AS INDEXNUM,  'KPI_11' AS KPIS,23 AS ROWNUM,  2 AS TAB, 'Value of taxonomy-aligned exposures to other' AS T,  'Capital expenditures-based (monetary amount):' AS T,  0 AS VALUE\n" +
                "\n" +
                " UNION ALL\n" +
                "  \n" +
                "  SELECT  45 AS INDEXNUM,  NULL AS KPIS,24 AS ROWNUM,  12 AS TAB, 'Breakdown of the numerator of the KPI per environmental objective' AS KPI_TC, NULL AS T,  NULL AS VALUE\n" +
                "\n" +
                "UNION ALL\n" +
                "  \n" +
                "  SELECT  46 AS INDEXNUM,  'KPI_12_13_14' AS KPIS,24 AS ROWNUM,  12 AS TAB, 'Taxonomy-aligned activities:' AS KPI_TC,  NULL AS T,  NULL AS VALUE\n" +
                "  \n" +
                "  UNION ALL\n" +
                "  \n" +
                "  SELECT  47 AS INDEXNUM,  'KPI_12_13_14'  AS KPIS,25 AS ROWNUM,  12 AS TAB, '(1) Climate change mitigation' AS KPI_TC,  NULL AS T,  NULL AS VALUE\n" +
                "  \n" +
                " UNION ALL\n" +
                "  \n" +
                " SELECT  48 AS INDEXNUM,  'KPI_12_13_14' AS KPIS, 33 AS ROWNUM, 1 AS TAB, NULL AS KPI_TC, 'Turnover (%):' AS T, \n" +
                "SUM(CASE WHEN NFRD_SCOPE = 'YES' THEN EXPOSURE_AMNT_IN_EUR/(SELECT DENOM FROM TEM) * CLIMATE_MITIGATION_TURNOVER  ELSE 0 END) AS VALUE FROM  KPI_DATA\n" +
                "  \n" +
                "UNION ALL\n" +
                "  \n" +
                "  SELECT  49 AS INDEXNUM,  'KPI_12_13_14'  AS KPIS,33 AS ROWNUM,  2 AS TAB, NULL AS KPI_TC, 'Transitional activities (A%)' AS T, NULL AS VALUE \n" +
                " \n" +
                " UNION ALL\n" +
                "  \n" +
                " SELECT  50 AS INDEXNUM,  'KPI_12_13_14'  AS KPIS, 34 AS ROWNUM, 1 AS TAB, NULL AS  KPI_TC,  'CapEx (%):' AS T, \n" +
                "SUM(CASE WHEN NFRD_SCOPE = 'YES' THEN  EXPOSURE_AMNT_IN_EUR/(SELECT DENOM FROM TEM) * CLIMATE_MITIGATION_CAPEX ELSE 0 END) AS VALUE FROM  KPI_DATA\n" +
                "  \n" +
                " UNION ALL\n" +
                "  \n" +
                " SELECT  51 AS INDEXNUM,  'KPI_12_13_14'  AS KPIS, 34 AS ROWNUM,  2 AS TAB,  NULL AS  KPI_TC, 'Turnover (%):' AS T, \n" +
                "SUM(CASE WHEN NFRD_SCOPE = 'YES' THEN EXPOSURE_AMNT_IN_EUR/(SELECT DENOM FROM TEM) * EN_TURN ELSE 0 END) AS VALUE  FROM  ACT_TO_V WHERE  OBJECTIVE = 'CLIMATE CHANGE MITIGATION' AND ACTIVITY_TURNOVER = 'TRANSITIONAL ACTIVITY'\n" +
                "  \n" +
                " UNION ALL\n" +
                "  \n" +
                " SELECT  52 AS INDEXNUM,  'KPI_12_13_14' AS KPIS, 35 AS ROWNUM, 2 AS TAB, NULL AS KPI_TC, 'CapEx (%):' AS T,  \n" +
                " SUM(CASE WHEN NFRD_SCOPE = 'YES' THEN EXPOSURE_AMNT_IN_EUR/(SELECT DENOM FROM TEM) * EN_CAP ELSE 0 END) AS VALUE  FROM  ACT_TO_CP WHERE  OBJECTIVE = 'CLIMATE CHANGE MITIGATION' AND ACTIVITY_CAPEX = 'TRANSITIONAL ACTIVITY'\n" +
                "\n" +
                "UNION ALL\n" +
                "  \n" +
                "  SELECT 53 AS INDEXNUM,  'KPI_12_13_14'  AS KPIS,36 AS ROWNUM,  2 AS TAB, NULL AS KPI_TC, 'Enabling activities (B%)' AS T, NULL AS VALUE \n" +
                " \n" +
                " UNION ALL\n" +
                "  \n" +
                " SELECT  54 AS INDEXNUM,  'KPI_12_13_14'  AS KPIS, 37 AS ROWNUM, 2 AS TAB, NULL AS  KPI_TC,  'Turnover (%):' AS T,\n" +
                " SUM(CASE WHEN NFRD_SCOPE = 'YES' THEN EXPOSURE_AMNT_IN_EUR/(SELECT DENOM FROM TEM) * EN_TURN ELSE 0 END) AS VALUE  FROM  ACT_TO_V WHERE  OBJECTIVE = 'CLIMATE CHANGE MITIGATION' AND ACTIVITY_TURNOVER = 'ENABLING ACTIVITY'\n" +
                "  \n" +
                " UNION ALL\n" +
                "  \n" +
                " SELECT  55 AS INDEXNUM,  'KPI_12_13_14'  AS KPIS, 38 AS ROWNUM,  2 AS TAB,  NULL AS  KPI_TC, 'CapEx (%):' AS T, \n" +
                " SUM(CASE WHEN NFRD_SCOPE = 'YES' THEN EXPOSURE_AMNT_IN_EUR/(SELECT DENOM FROM TEM) * EN_CAP ELSE 0 END) AS VALUE  FROM  ACT_TO_CP WHERE  OBJECTIVE = 'CLIMATE CHANGE MITIGATION' AND ACTIVITY_CAPEX =  'ENABLING ACTIVITY' \n" +
                "  \n" +
                "  UNION ALL \n" +
                "  \n" +
                "  SELECT  56 AS INDEXNUM, 'KPI_12_13_14'  AS KPIS,25 AS ROWNUM,  12 AS TAB, '(2) Climate change adaptation' AS KPI_TC,  NULL AS T,  NULL AS VALUE\n" +
                "  \n" +
                " UNION ALL\n" +
                "  \n" +
                " SELECT  57 AS INDEXNUM,  'KPI_12_13_14' AS KPIS, 40 AS ROWNUM, 1 AS TAB, NULL AS KPI_TC, 'Turnover (%):' AS T, \n" +
                "SUM(CASE WHEN NFRD_SCOPE = 'YES' THEN EXPOSURE_AMNT_IN_EUR/(SELECT DENOM FROM TEM) * CLIMATE_ADAPTATION_TURNOVER ELSE 0 END) AS VALUE FROM  KPI_DATA\n" +
                "\n" +
                "UNION ALL\n" +
                "  \n" +
                "  SELECT  58 AS INDEXNUM,  'KPI_12_13_14'  AS KPIS,40 AS ROWNUM,  2 AS TAB, NULL AS KPI_TC, 'Transitional activities (A%)' AS T, NULL AS VALUE \n" +
                " \n" +
                " UNION ALL\n" +
                "  \n" +
                " SELECT  59 AS INDEXNUM,  'KPI_12_13_14'  AS KPIS, 41 AS ROWNUM, 1 AS TAB, NULL AS  KPI_TC,  'CapEx (%):' AS T,\n" +
                "SUM(CASE WHEN NFRD_SCOPE = 'YES' THEN EXPOSURE_AMNT_IN_EUR/(SELECT DENOM FROM TEM) * CLIMATE_ADAPTATION_CAPEX ELSE 0 END) AS VALUE FROM  KPI_DATA\n" +
                "  \n" +
                " UNION ALL\n" +
                "  \n" +
                "  SELECT  60 AS INDEXNUM,  'KPI_12_13_14'  AS KPIS, 41 AS ROWNUM,  2 AS TAB,  NULL AS  KPI_TC, 'Turnover (%):' AS T, \n" +
                " SUM(CASE WHEN NFRD_SCOPE = 'YES' THEN EXPOSURE_AMNT_IN_EUR/(SELECT DENOM FROM TEM) * EN_TURN ELSE 0 END) AS VALUE  FROM  ACT_TO_V WHERE  OBJECTIVE = 'CLIMATE CHANGE ADAPTATION' AND ACTIVITY_TURNOVER = 'TRANSITIONAL ACTIVITY'\n" +
                "  \n" +
                "  UNION ALL\n" +
                "  \n" +
                " SELECT  61 AS INDEXNUM,  'KPI_12_13_14' AS KPIS, 42 AS ROWNUM, 2 AS TAB, NULL AS KPI_TC, 'CapEx (%):' AS T, \n" +
                " SUM(CASE WHEN NFRD_SCOPE = 'YES' THEN EXPOSURE_AMNT_IN_EUR/(SELECT DENOM FROM TEM) * EN_CAP ELSE 0 END) AS VALUE  FROM  ACT_TO_CP WHERE  OBJECTIVE = 'CLIMATE CHANGE ADAPTATION' AND ACTIVITY_CAPEX = 'TRANSITIONAL ACTIVITY' \n" +
                "\n" +
                "UNION ALL\n" +
                "  \n" +
                "  SELECT 62 AS INDEXNUM,  'KPI_12_13_14'  AS KPIS,43 AS ROWNUM,  2 AS TAB, NULL AS KPI_TC, 'Enabling activities (B%)' AS T, NULL AS VALUE\n" +
                " \n" +
                " UNION ALL\n" +
                "  \n" +
                " SELECT  63 AS INDEXNUM,  'KPI_12_13_14'  AS KPIS, 44 AS ROWNUM, 2 AS TAB, NULL AS  KPI_TC,  'Turnover (%):' AS T,\n" +
                " SUM(CASE WHEN NFRD_SCOPE = 'YES' THEN EXPOSURE_AMNT_IN_EUR/(SELECT DENOM FROM TEM) * EN_TURN ELSE 0 END) AS VALUE  FROM  ACT_TO_V WHERE  OBJECTIVE = 'CLIMATE CHANGE ADAPTATION' AND ACTIVITY_TURNOVER = 'ENABLING ACTIVITY'\n" +
                "  \n" +
                "UNION ALL\n" +
                "  \n" +
                " SELECT  64 AS INDEXNUM,  'KPI_12_13_14'  AS KPIS, 45 AS ROWNUM,  2 AS TAB,  NULL AS  KPI_TC, 'CapEx (%):' AS T, \n" +
                "SUM(CASE WHEN NFRD_SCOPE = 'YES' THEN EXPOSURE_AMNT_IN_EUR/(SELECT DENOM FROM TEM) * EN_CAP ELSE 0 END) AS VALUE  FROM  ACT_TO_CP WHERE  OBJECTIVE = 'CLIMATE CHANGE ADAPTATION' AND ACTIVITY_CAPEX =  'ENABLING ACTIVITY') \n" +
                "\n" +
                "  \n" +
                "  \n" +
                " SELECT INDEXNUM,KPIS,ROWNUM,TAB,KPI_TC,T as Description ,Round(TO_VARCHAR(VALUE),2) VALUE\n" +
                "  FROM FINAL_OUTPUT where KPIS is not null and TAB <> 12 And Description is not null and Value is not null";
        return getQueryResultMap(query);
    }
    public List<String> getSFDRCompanyOutputForAllYears(String portfolioId, String companyName) {
        List<String> data = new ArrayList<>();
        for (int i = 2019; i < 2022; i++) {
            List<Map<String, Object>> result = getSFDRCompanyOutput(portfolioId, String.valueOf(i));
            for (Map<String, Object> company:result){
                if(company.get("COMPANY_NAME").equals(companyName)){
                    company.values().forEach(value -> {
                        if(value==null) data.add("NI");
                        else data.add(value.toString());
                    });
                }
            }
        }
        return data;
    }

    public List<Map<String, Object>> getUserInputHistory(String portfolioId) {
        String query = "with p as (Select * from df_portfolio where portfolio_id ='"+portfolioId+"')\n" +
                "select SEC_ID, COMPANY_NAME, \"VALUE\", round(\"VALUE\"*100/(select sum(\"VALUE\") from p),2) as \"Exposure Amount Percent\" from p";
        return getQueryResultMap(query);
    }

    public List<Map<String, Object>> getUserInputHistoryWithEUR(String portfolioId) {
        String query = "with p as (Select * from df_portfolio where portfolio_id ='"+portfolioId+"'),\n" +
                "c as (select top 1 MIDRATE from DF_LOOKUP.fx_rate where FROMCURRCODE='USD' and TOCURRCODE='EUR' order by CREATE_DATE_TIME Desc)\n" +
                "select SEC_ID, COMPANY_NAME, VALUE*c.MIDRATE as VALUE, round(VALUE*100/(select sum(VALUE) from p),2) as percentage from p, c order by sec_id";
        return getQueryResultMap(query);
    }

    /**
     *
     * @param portfolioId : one portfolio at a time
     * @param reportingYear : even latest data is selected, still reporting year is needed to be provided
     * @param reportFormat : "Interim" or "Annual"
     * @param useLatestData : "Yes" or "No"
     * @return ist<Map<String, Object>>
     */
    public List<Map<String, Object>> getPortfolioLevelOutput(String portfolioId, String reportingYear, String reportFormat, String useLatestData) {
        String query = "";
        if(reportFormat.equals("Interim")){
            query = "with p AS (\n" +
                    "\tSELECT PORTFOLIO_ID, BVD9_NUMBER, VALUE, CURRENCY,\n" +
                    "   SUM(VALUE) OVER (partition by portfolio_id) TOTAL_VALUE\n" +
                    "\tFROM df_target.df_portfolio\n" +
                    "\tWHERE portfolio_id IN ('"+portfolioId+"')           \n" +
                    "\t) --SELECT * FROM p\n" +
                    "\t,eem\n" +
                    "AS (\n" +
                    "\tSELECT portfolio_id\n" +
                    "\t\t,eem.orbis_id,\n" +
                    "        VALUE,\n" +
                    "     TOTAL_VALUE,\n" +
                    "        CURRENCY,\n" +
                    "     eem.FACTSET_ENTITY_ID,\n" +
                    "      fsm.FSYM_company_ID  \n" +
                    " FROM p \n" +
                    "  left outer join DF_TARGET.ESG_ENTITY_MASTER EEM on (p.BVD9_NUMBER = EEM.orbis_id and eem.entity_status ='Active')\n" +
                    "  left outer join DF_DERIVED.ISIN_SORTED ISS ON (EEM.FACTSET_ENTITY_ID = ISS.FACTSET_ENTITY_ID ) and ISS.PRIMARY_ISIN = 'Y'\n" +
                    "  left outer join FACTSET_MOODYS_DS.ff_v3.ff_sec_map fsm on (iss.fsym_id = fsm.fsym_id)\t) \n" +
                    "\t,cy\n" +
                    "AS (\n" +
                    "\tSELECT portfolio_id,\n" +
                    "         rrs.*,COUNT(DISTINCT(rrs.BVD9_NUMBER)) OVER (partition by portfolio_id) TOTAL_CELLS,\n" +
                    "         EEM.VALUE COMPANY_VALUE, \n" +
                    "         EEM.TOTAL_VALUE,\n" +
                    "         CURRENCY,\n" +
                    "       EEM.FACTSET_ENTITY_ID,\n" +
                    "      EEM.FSYM_company_ID\n" +
                    "\tFROM df_target.regulatory_report_sfdr rrs \n" +
                    "\t\t,eem\n" +
                    "\tWHERE rrs.BVD9_NUMBER = eem.orbis_id\n" +
                    "   AND (case when '"+useLatestData+"' =  'No' then REPORTING_YEAR = "+reportingYear+" else  REPORTING_YEAR >=  year(current_date) -3 and REPORTING_YEAR <= year(current_date) end )                            \n" +
                    "   QUALIFY ROW_NUMBER() OVER(PARTITION BY portfolio_id, BVD9_NUMBER, INDICATOR, TAXONOMY_ID ORDER BY REPORTING_YEAR DESC) = 1   \t\n" +
                    "\t), \n" +
                    "    \n" +
                    " ENT_VALUE AS (SELECT CY.*, FBDA.FF_ENTRPR_VAL, FBA.FF_CASH_ST, FBA.FF_SALES  FROM CY  left outer join FACTSET_MOODYS_DS.FF_V3.FF_BASIC_DER_AF FBDA on (CY.FSYM_company_ID  = FBDA.FSYM_ID and FBDA.FF_FYR = CY.REPORTING_YEAR) \n" +
                    "                 left outer join  FACTSET_MOODYS_DS.FF_V3.FF_BASIC_AF FBA ON FBA.FSYM_ID =  CY.FSYM_company_ID AND FBA.FF_FYR = CY.REPORTING_YEAR ),\n" +
                    "       \n" +
                    "    er as (select PORTFOLIO_ID, VE_ID, BVD9_NUMBER, FACTSET_ID, REPORTING_YEAR, PRODUCED_DATE, PRODUCED_YEAR, PRODUCED_MONTH, INDICATOR, NAME, METRIC_UNIT, RELATED_TO, TAXONOMY_ID, VALUE, TOTAL_CELLS, CURRENCY,   \n" +
                    "           \n" +
                    "            FR.MIDRATE * COMPANY_VALUE AS EXPOSURE_AMOUNT , FR.MIDRATE * TOTAL_VALUE TOTAL_EXPOSURE_AMOUNT,  (FR.MIDRATE * COMPANY_VALUE)/(FR.MIDRATE * TOTAL_VALUE) weight_in_portfolio, \n" +
                    "            (CASE WHEN (((FR.MIDRATE * FF_ENTRPR_VAL) + (FR.MIDRATE * FF_CASH_ST)) * 1000000) < 0 THEN NULL ELSE (((FR.MIDRATE * FF_ENTRPR_VAL) + (FR.MIDRATE * FF_CASH_ST)) * 1000000) END)  AS ENTRPR_VAL, \n" +
                    "            ((FR.MIDRATE * FF_SALES) * 1000000) AS REVENUE\n" +
                    "           from ENT_VALUE EV, DF_LOOKUP.FX_RATE  FR where EV.PRODUCED_DATE = FR.EXRATEDATE AND  FR.FROMCURRCODE = EV.CURRENCY AND FR.TOCURRCODE = 'EUR'   \n" +
                    "        ),      \n" +
                    "\n" +
                    "all_columns as (SELECT ER.*, (CASE WHEN NACE_SECTION_CODE  IN ('A','B','C','D','E','F','G','H','L') then 'Y' else 'N' END) AS HIGH_IMPACT_CHECk     \n" +
                    "      FROM er \n" +
                    "LEFT OUTER JOIN FACTSET_MOODYS_DS.ENT_V1.ENT_ENTITY_COVERAGE fec ON fec.FACTSET_ENTITY_ID = ER.FACTSET_ID\n" +
                    "LEFT OUTER JOIN FACTSET_MOODYS_DS.REF_V2.NACE_CLASSIFICATION_MAP nm ON fec.NACE_CODE = nm.NACE_CODE),\n" +
                    "\n" +
                    "output as\n" +
                    "\n" +
                    "(SELECT CATEGORY, SUB_CATEGORY, SFDR_CATEGORY, SFDR_SUBCATEGORY, METRIC_TYPE, sfdr_indicator, spt.TAXONOMY_ID, spt.PORTFOLIO_ID, IFNULL(TO_VARCHAR(ROUND(impact, 2)), 'NI') AS IMPACT, ROUND((Scope_of_Disclosure/TOTAL_CELLS) * 100, 2)  Scope_of_Disclosure  from \n" +
                    " (select spt.*, er.PORTFOLIO_ID from DF_TARGET.SFDR_PORTFOLIO_TEMPLATE spt, (select distinct portfolio_id from er) er)  spt full outer join (\n" +
                    "  \n" +
                    "  \n" +
                    "  select PORTFOLIO_ID, INDICATOR, TAXONOMY_ID, SUM(CASE WHEN VALUE = 'NI' THEN 0 ELSE VALUE * (EXPOSURE_AMOUNT/ENTRPR_VAL)   END) as Impact, SUM(CASE WHEN VALUE = 'NI' OR VALUE IS NULL THEN 0 ELSE 1 END)  AS Scope_of_Disclosure,  TOTAL_CELLS\n" +
                    "from all_columns  where INDICATOR = 'SFDR_1' AND TAXONOMY_ID = 1  GROUP BY PORTFOLIO_ID, INDICATOR, TAXONOMY_ID,TOTAL_CELLS\n" +
                    "\n" +
                    "UNION ALL\n" +
                    "select PORTFOLIO_ID, INDICATOR, TAXONOMY_ID, SUM(CASE WHEN VALUE = 'NI' THEN 0 ELSE VALUE * (EXPOSURE_AMOUNT/ENTRPR_VAL)   END) as Impact, SUM(CASE WHEN VALUE = 'NI' OR VALUE IS NULL THEN 0 ELSE 1 END)  AS Scope_of_Disclosure, TOTAL_CELLS\n" +
                    "from all_columns  where INDICATOR = 'SFDR_1' AND TAXONOMY_ID = 2  GROUP BY PORTFOLIO_ID, INDICATOR, TAXONOMY_ID,TOTAL_CELLS\n" +
                    "\n" +
                    "UNION ALL\n" +
                    "select PORTFOLIO_ID, INDICATOR, TAXONOMY_ID, SUM(CASE WHEN VALUE = 'NI' THEN 0 ELSE VALUE * (EXPOSURE_AMOUNT/ENTRPR_VAL)   END) as Impact, SUM(CASE WHEN VALUE = 'NI' OR VALUE IS NULL THEN 0 ELSE 1 END)  AS Scope_of_Disclosure, TOTAL_CELLS\n" +
                    "from all_columns  where INDICATOR = 'SFDR_1' AND TAXONOMY_ID = 3  GROUP BY PORTFOLIO_ID, INDICATOR, TAXONOMY_ID,TOTAL_CELLS\n" +
                    "\n" +
                    "\n" +
                    "UNION ALL\n" +
                    "select A.PORTFOLIO_ID, A.INDICATOR, A.TAXONOMY_ID, SUM(A.Impact), B.Scope_of_Disclosure, B.TOTAL_CELLS FROM (select PORTFOLIO_ID, INDICATOR, 4 as TAXONOMY_ID, \n" +
                    "SUM(CASE WHEN   VALUE = 'NI' THEN 0 ELSE VALUE * (EXPOSURE_AMOUNT/ENTRPR_VAL)  END) as Impact \n" +
                    "from all_columns  where INDICATOR = 'SFDR_1' AND  TAXONOMY_ID = 4 GROUP BY PORTFOLIO_ID, INDICATOR, TAXONOMY_ID ) A, \n" +
                    "(select PORTFOLIO_ID, INDICATOR, TAXONOMY_ID, SUM(CASE WHEN VALUE = 'NI' OR VALUE IS NULL THEN 0 ELSE 1 END)  AS Scope_of_Disclosure, TOTAL_CELLS\n" +
                    "from all_columns  where INDICATOR = 'SFDR_1' AND TAXONOMY_ID = 4 GROUP BY PORTFOLIO_ID, INDICATOR, TAXONOMY_ID,TOTAL_CELLS) B WHERE a.PORTFOLIO_ID = b.PORTFOLIO_ID and a.INDICATOR = b.INDICATOR \n" +
                    "   GROUP BY A.PORTFOLIO_ID, A.INDICATOR, A.TAXONOMY_ID, B.TOTAL_CELLS, B.Scope_of_Disclosure\n" +
                    "   \n" +
                    "\n" +
                    "UNION ALL\n" +
                    "SELECT PORTFOLIO_ID, INDICATOR, TAXONOMY_ID, SUM(VALUE * EXPOSURE_AMOUNT)/SUM(EXPOSURE_AMOUNT) AS IMPACT , SUM(Scope_of_Disclosure), TOTAL_CELLS FROM   (select PORTFOLIO_ID, INDICATOR, TAXONOMY_ID, Value,  EXPOSURE_AMOUNT , SUM(EXPOSURE_AMOUNT) OVER (partition by portfolio_id) AS TOTAL_EXPOSURE_AMOUNT,  1  AS Scope_of_Disclosure ,TOTAL_CELLS\n" +
                    "from all_columns  where INDICATOR = 'SFDR_2' AND  TAXONOMY_ID = 27  AND  (VALUE <> 'NI' OR VALUE IS NULL)) GROUP BY PORTFOLIO_ID, INDICATOR, TAXONOMY_ID, TOTAL_CELLS\n" +
                    "\n" +
                    "   UNION ALL\n" +
                    "SELECT PORTFOLIO_ID, INDICATOR, TAXONOMY_ID, SUM(VALUE * EXPOSURE_AMOUNT/TOTAL_EXPOSURE_AMOUNT) AS IMPACT , SUM(Scope_of_Disclosure), TOTAL_CELLS FROM   (select PORTFOLIO_ID, INDICATOR, TAXONOMY_ID, Value,  EXPOSURE_AMOUNT , SUM(EXPOSURE_AMOUNT) OVER (partition by portfolio_id) AS TOTAL_EXPOSURE_AMOUNT,  1  AS Scope_of_Disclosure ,TOTAL_CELLS\n" +
                    "from all_columns  where INDICATOR = 'SFDR_3' AND  TAXONOMY_ID = 28  AND  (VALUE <> 'NI' OR VALUE IS NULL)) GROUP BY PORTFOLIO_ID, INDICATOR, TAXONOMY_ID, TOTAL_CELLS  \n" +
                    "   \n" +
                    " UNION ALL\n" +
                    "   \n" +
                    "   \n" +
                    "SELECT PORTFOLIO_ID, INDICATOR, TAXONOMY_ID, SUM(CASE WHEN VALUE = 'No' THEN 0 ELSE EXPOSURE_AMOUNT/TOTAL_EXPOSURE_AMOUNT END) * 100 AS IMPACT , SUM(Scope_of_Disclosure), TOTAL_CELLS FROM ( select PORTFOLIO_ID, INDICATOR, TAXONOMY_ID, Value,  EXPOSURE_AMOUNT , SUM(EXPOSURE_AMOUNT) OVER (partition by portfolio_id) AS TOTAL_EXPOSURE_AMOUNT,  1  AS Scope_of_Disclosure ,TOTAL_CELLS\n" +
                    "from all_columns  where INDICATOR = 'SFDR_4' AND  TAXONOMY_ID = 23  AND  (VALUE <> 'NI' OR VALUE IS NULL)) GROUP BY PORTFOLIO_ID, INDICATOR, TAXONOMY_ID, TOTAL_CELLS  \n" +
                    "\n" +
                    "\n" +
                    "UNION ALL\n" +
                    "   \n" +
                    "SELECT PORTFOLIO_ID, INDICATOR, TAXONOMY_ID, SUM(VALUE * EXPOSURE_AMOUNT/TOTAL_EXPOSURE_AMOUNT) * 100 AS IMPACT , SUM(Scope_of_Disclosure), TOTAL_CELLS FROM   (select PORTFOLIO_ID, INDICATOR, TAXONOMY_ID, Value,  EXPOSURE_AMOUNT , SUM(EXPOSURE_AMOUNT) OVER (partition by portfolio_id) AS TOTAL_EXPOSURE_AMOUNT,  1  AS Scope_of_Disclosure ,TOTAL_CELLS\n" +
                    "from all_columns  where INDICATOR = 'SFDR_5' AND  TAXONOMY_ID = 11  AND  (VALUE <> 'NI' OR VALUE IS NULL)) GROUP BY PORTFOLIO_ID, INDICATOR, TAXONOMY_ID, TOTAL_CELLS\n" +
                    "\n" +
                    "UNION ALL\n" +
                    "SELECT PORTFOLIO_ID, INDICATOR, TAXONOMY_ID, SUM(VALUE * EXPOSURE_AMOUNT/TOTAL_EXPOSURE_AMOUNT) * 100 AS IMPACT , SUM(Scope_of_Disclosure), TOTAL_CELLS FROM   (select PORTFOLIO_ID, INDICATOR, TAXONOMY_ID, Value,  EXPOSURE_AMOUNT , SUM(EXPOSURE_AMOUNT) OVER (partition by portfolio_id) AS TOTAL_EXPOSURE_AMOUNT,  1  AS Scope_of_Disclosure ,TOTAL_CELLS\n" +
                    "from all_columns  where INDICATOR = 'SFDR_5' AND  TAXONOMY_ID = 12  AND  (VALUE <> 'NI' OR VALUE IS NULL)) GROUP BY PORTFOLIO_ID, INDICATOR, TAXONOMY_ID, TOTAL_CELLS  \n" +
                    "   \n" +
                    "\n" +
                    "UNION ALL\n" +
                    "SELECT PORTFOLIO_ID, INDICATOR, TAXONOMY_ID, SUM(CASE WHEN HIGH_IMPACT_CHECK = 'N' THEN 0 ELSE (EXPOSURE_AMOUNT/TOTAL_EXPOSURE_AMOUNT) * VALUE END) AS IMPACT , SUM(Scope_of_Disclosure), TOTAL_CELLS FROM ( \n" +
                    "  select PORTFOLIO_ID, INDICATOR, TAXONOMY_ID, Value,  EXPOSURE_AMOUNT , SUM(EXPOSURE_AMOUNT) OVER (partition by portfolio_id) AS TOTAL_EXPOSURE_AMOUNT,  1  AS Scope_of_Disclosure ,TOTAL_CELLS, HIGH_IMPACT_CHECK\n" +
                    "from all_columns  where INDICATOR = 'SFDR_6'  AND  (VALUE <> 'NI' OR VALUE IS NULL)) GROUP BY PORTFOLIO_ID, INDICATOR, TAXONOMY_ID, TOTAL_CELLS     \n" +
                    "   \n" +
                    "   \n" +
                    "UNION ALL\n" +
                    "SELECT PORTFOLIO_ID, INDICATOR, TAXONOMY_ID, SUM((EXPOSURE_AMOUNT/TOTAL_EXPOSURE_AMOUNT) * VALUE) * 100 AS IMPACT , SUM(Scope_of_Disclosure), TOTAL_CELLS FROM ( \n" +
                    "  select PORTFOLIO_ID, INDICATOR, TAXONOMY_ID, Value,  EXPOSURE_AMOUNT , SUM(EXPOSURE_AMOUNT) OVER (partition by portfolio_id) AS TOTAL_EXPOSURE_AMOUNT,  1  AS Scope_of_Disclosure ,TOTAL_CELLS\n" +
                    "from all_columns  where INDICATOR = 'SFDR_7'  AND  (VALUE <> 'NI' OR VALUE IS NULL)) GROUP BY PORTFOLIO_ID, INDICATOR, TAXONOMY_ID, TOTAL_CELLS  \n" +
                    "   \n" +
                    "   \n" +
                    "UNION ALL\n" +
                    "SELECT PORTFOLIO_ID, INDICATOR, TAXONOMY_ID, SUM((EXPOSURE_AMOUNT/(ENTRPR_VAL/1000000)) * VALUE)/SUM(EXPOSURE_AMOUNT) AS IMPACT , SUM(Scope_of_Disclosure), TOTAL_CELLS  FROM (select PORTFOLIO_ID, INDICATOR, ENTRPR_VAL, TAXONOMY_ID, Value,  EXPOSURE_AMOUNT , SUM(EXPOSURE_AMOUNT) OVER (partition by portfolio_id) AS TOTAL_EXPOSURE_AMOUNT,  1  AS Scope_of_Disclosure ,TOTAL_CELLS\n" +
                    "from all_columns  where INDICATOR = 'SFDR_8'  AND  (VALUE <> 'NI' OR VALUE IS NULL)) GROUP BY PORTFOLIO_ID, INDICATOR, TAXONOMY_ID, TOTAL_CELLS  \n" +
                    "   \n" +
                    "  \n" +
                    "   \n" +
                    " UNION ALL\n" +
                    "SELECT PORTFOLIO_ID, INDICATOR, TAXONOMY_ID, SUM((EXPOSURE_AMOUNT/(ENTRPR_VAL/1000000)) * VALUE)/SUM(EXPOSURE_AMOUNT) AS IMPACT , SUM(Scope_of_Disclosure), TOTAL_CELLS  FROM (select PORTFOLIO_ID, INDICATOR, ENTRPR_VAL, TAXONOMY_ID, Value,  EXPOSURE_AMOUNT , SUM(EXPOSURE_AMOUNT) OVER (partition by portfolio_id) AS TOTAL_EXPOSURE_AMOUNT,  1  AS Scope_of_Disclosure ,TOTAL_CELLS\n" +
                    "from all_columns  where INDICATOR = 'SFDR_9'  AND  (VALUE <> 'NI' OR VALUE IS NULL)) GROUP BY PORTFOLIO_ID, INDICATOR, TAXONOMY_ID, TOTAL_CELLS    \n" +
                    "\n" +
                    "   \n" +
                    " UNION ALL\n" +
                    "SELECT PORTFOLIO_ID, INDICATOR, TAXONOMY_ID, SUM(CASE WHEN VALUE = 'Yes' THEN   EXPOSURE_AMOUNT/TOTAL_EXPOSURE_AMOUNT  END) * 100 AS IMPACT , SUM(Scope_of_Disclosure), TOTAL_CELLS  FROM (select PORTFOLIO_ID, INDICATOR, ENTRPR_VAL, TAXONOMY_ID, Value,  EXPOSURE_AMOUNT , SUM(EXPOSURE_AMOUNT) OVER (partition by portfolio_id) AS TOTAL_EXPOSURE_AMOUNT,  1  AS Scope_of_Disclosure ,TOTAL_CELLS\n" +
                    "from all_columns  where INDICATOR = 'SFDR_10'  AND  (VALUE <> 'NI' OR VALUE IS NULL)) GROUP BY PORTFOLIO_ID, INDICATOR, TAXONOMY_ID, TOTAL_CELLS    \n" +
                    "\n" +
                    "\n" +
                    " UNION ALL \n" +
                    "SELECT PORTFOLIO_ID, INDICATOR, TAXONOMY_ID, SUM(VALUE * EXPOSURE_AMOUNT/TOTAL_EXPOSURE_AMOUNT) * 100 AS IMPACT , SUM(Scope_of_Disclosure), TOTAL_CELLS FROM   (select PORTFOLIO_ID, INDICATOR, TAXONOMY_ID, Value,  EXPOSURE_AMOUNT , SUM(EXPOSURE_AMOUNT) OVER (partition by portfolio_id) AS TOTAL_EXPOSURE_AMOUNT,  1  AS Scope_of_Disclosure ,TOTAL_CELLS\n" +
                    "from all_columns  where INDICATOR = 'SFDR_12' AND  TAXONOMY_ID = 15  AND  (VALUE <> 'NI' OR VALUE IS NULL)) GROUP BY PORTFOLIO_ID, INDICATOR, TAXONOMY_ID, TOTAL_CELLS\n" +
                    "\n" +
                    " UNION ALL\n" +
                    "SELECT PORTFOLIO_ID, INDICATOR, TAXONOMY_ID, SUM(VALUE * EXPOSURE_AMOUNT/TOTAL_EXPOSURE_AMOUNT) * 100 AS IMPACT , SUM(Scope_of_Disclosure), TOTAL_CELLS FROM   (select PORTFOLIO_ID, INDICATOR, TAXONOMY_ID, Value,  EXPOSURE_AMOUNT , SUM(EXPOSURE_AMOUNT) OVER (partition by portfolio_id) AS TOTAL_EXPOSURE_AMOUNT,  1  AS Scope_of_Disclosure ,TOTAL_CELLS\n" +
                    "from all_columns  where INDICATOR = 'SFDR_12' AND  TAXONOMY_ID = 16  AND  (VALUE <> 'NI' OR VALUE IS NULL)) GROUP BY PORTFOLIO_ID, INDICATOR, TAXONOMY_ID, TOTAL_CELLS  \n" +
                    "     \n" +
                    "   \n" +
                    "   \n" +
                    "       UNION ALL\n" +
                    "SELECT PORTFOLIO_ID, INDICATOR, 20 as TAXONOMY_ID, SUM((VALUE/(1-VALUE)) * EXPOSURE_AMOUNT/TOTAL_EXPOSURE_AMOUNT) * 100 AS IMPACT , SUM(Scope_of_Disclosure), TOTAL_CELLS FROM   (select PORTFOLIO_ID, INDICATOR, TAXONOMY_ID, Value,  EXPOSURE_AMOUNT , SUM(EXPOSURE_AMOUNT) OVER (partition by portfolio_id) AS TOTAL_EXPOSURE_AMOUNT,  1  AS Scope_of_Disclosure ,TOTAL_CELLS\n" +
                    "from all_columns  where INDICATOR = 'SFDR_13' AND  TAXONOMY_ID = 19  AND  (VALUE <> 'NI' OR VALUE IS NULL)) GROUP BY PORTFOLIO_ID, INDICATOR, TAXONOMY_ID, TOTAL_CELLS  \n" +
                    "\n" +
                    "   \n" +
                    "    UNION ALL\n" +
                    "SELECT PORTFOLIO_ID, INDICATOR, 21 as TAXONOMY_ID, SUM(VALUE * EXPOSURE_AMOUNT/TOTAL_EXPOSURE_AMOUNT) * 100 AS IMPACT , SUM(Scope_of_Disclosure), TOTAL_CELLS FROM   (select PORTFOLIO_ID, INDICATOR, TAXONOMY_ID, Value,  EXPOSURE_AMOUNT , SUM(EXPOSURE_AMOUNT) OVER (partition by portfolio_id) AS TOTAL_EXPOSURE_AMOUNT,  1  AS Scope_of_Disclosure ,TOTAL_CELLS\n" +
                    "from all_columns  where INDICATOR = 'SFDR_13' AND  TAXONOMY_ID = 19  AND  (VALUE <> 'NI' OR VALUE IS NULL)) GROUP BY PORTFOLIO_ID, INDICATOR, TAXONOMY_ID, TOTAL_CELLS  \n" +
                    "\n" +
                    "   \n" +
                    " UNION ALL\n" +
                    "SELECT PORTFOLIO_ID, INDICATOR, TAXONOMY_ID, SUM(CASE WHEN VALUE = 'Yes' THEN   EXPOSURE_AMOUNT/TOTAL_EXPOSURE_AMOUNT  END) * 100 AS IMPACT , SUM(Scope_of_Disclosure), TOTAL_CELLS  FROM (select PORTFOLIO_ID, INDICATOR, ENTRPR_VAL, TAXONOMY_ID, Value,  EXPOSURE_AMOUNT , SUM(EXPOSURE_AMOUNT) OVER (partition by portfolio_id) AS TOTAL_EXPOSURE_AMOUNT,  1  AS Scope_of_Disclosure ,TOTAL_CELLS\n" +
                    "from all_columns  where INDICATOR = 'SFDR_14'  AND  (VALUE <> 'NI' OR VALUE IS NULL)) GROUP BY PORTFOLIO_ID, INDICATOR, TAXONOMY_ID, TOTAL_CELLS    \n" +
                    "   \n" +
                    "UNION ALL\n" +
                    "SELECT PORTFOLIO_ID, INDICATOR, TAXONOMY_ID, SUM(VALUE * EXPOSURE_AMOUNT/TOTAL_EXPOSURE_AMOUNT  ) * 100 AS IMPACT , SUM(Scope_of_Disclosure), TOTAL_CELLS  FROM (select PORTFOLIO_ID, INDICATOR, ENTRPR_VAL, TAXONOMY_ID, Value,  EXPOSURE_AMOUNT , SUM(EXPOSURE_AMOUNT) OVER (partition by portfolio_id) AS TOTAL_EXPOSURE_AMOUNT,  1  AS Scope_of_Disclosure ,TOTAL_CELLS\n" +
                    "from all_columns  where INDICATOR = 'SFDR_17'  AND  (VALUE <> 'NI' OR VALUE IS NULL)) GROUP BY PORTFOLIO_ID, INDICATOR, TAXONOMY_ID, TOTAL_CELLS   \n" +
                    "\n" +
                    "\n" +
                    ") calc  on spt.PORTFOLIO_ID = calc.PORTFOLIO_ID and spt.sfdr_indicator = calc.indicator  and spt.TAXONOMY_ID = calc.TAXONOMY_ID \n" +
                    " order by PORTFOLIO_ID,TO_NUMBER(SUBSTRING(TRIM(spt.SFDR_INDICATOR),  6, 2))  ASC , spt.TAXONOMY_ID asc )\n" +
                    " \n" +
                    " \n" +
                    "     SELECT * FROM OUTPUT";
        }
        else {
            query="                 \n" +
                    "           with p AS (\n" +
                    "\tSELECT PORTFOLIO_ID, BVD9_NUMBER, VALUE, CURRENCY,\n" +
                    "   SUM(VALUE) OVER (partition by portfolio_id) TOTAL_VALUE\n" +
                    "\tFROM df_target.df_portfolio\n" +
                    "\tWHERE portfolio_id IN ('"+portfolioId+"')           \n" +
                    "\t) --SELECT * FROM p\n" +
                    "\t,eem\n" +
                    "AS (\n" +
                    "\tSELECT portfolio_id\n" +
                    "\t\t,eem.orbis_id,\n" +
                    "        VALUE,\n" +
                    "     TOTAL_VALUE,\n" +
                    "        CURRENCY,\n" +
                    "     eem.FACTSET_ENTITY_ID,\n" +
                    "      fsm.FSYM_company_ID      \n" +
                    " FROM p \n" +
                    "  left outer join DF_TARGET.ESG_ENTITY_MASTER EEM on (p.BVD9_NUMBER = EEM.orbis_id and eem.entity_status ='Active')\n" +
                    "  left outer join DF_DERIVED.ISIN_SORTED ISS ON (EEM.FACTSET_ENTITY_ID = ISS.FACTSET_ENTITY_ID ) and ISS.PRIMARY_ISIN = 'Y'\n" +
                    "  left outer join FACTSET_MOODYS_DS.ff_v3.ff_sec_map fsm on (iss.fsym_id = fsm.fsym_id)\t) \n" +
                    "\t,cy\n" +
                    "AS (\n" +
                    "\tSELECT portfolio_id,\n" +
                    "         rrs.*, COUNT(DISTINCT(rrs.BVD9_NUMBER)) OVER (partition by portfolio_id) TOTAL_CELLS,\n" +
                    "         EEM.VALUE COMPANY_VALUE, \n" +
                    "         EEM.TOTAL_VALUE,\n" +
                    "         CURRENCY,\n" +
                    "       EEM.FACTSET_ENTITY_ID,\n" +
                    "      EEM.FSYM_company_ID\n" +
                    "\tFROM df_target.regulatory_report_sfdr rrs \n" +
                    "\t\t,eem\n" +
                    "\tWHERE rrs.BVD9_NUMBER = eem.orbis_id\n" +
                    "   AND (case when '"+useLatestData+"' =  'No' then REPORTING_YEAR = "+reportingYear+" else  REPORTING_YEAR >=  year(current_date) -3 and REPORTING_YEAR <= year(current_date) end )                            \n" +
                    "   QUALIFY ROW_NUMBER() OVER(PARTITION BY portfolio_id, BVD9_NUMBER, INDICATOR, TAXONOMY_ID ORDER BY REPORTING_YEAR DESC) = 1   \t\n" +
                    "\t), \n" +
                    "    \n" +
                    "    ENT_VALUE AS (SELECT CY.*, FBDA.FF_ENTRPR_VAL, FBA.FF_CASH_ST, FBA.FF_SALES  FROM CY  left outer join FACTSET_MOODYS_DS.FF_V3.FF_BASIC_DER_AF FBDA on (CY.FSYM_company_ID  = FBDA.FSYM_ID and FBDA.FF_FYR = CY.REPORTING_YEAR) \n" +
                    "                 left outer join  FACTSET_MOODYS_DS.FF_V3.FF_BASIC_AF FBA ON FBA.FSYM_ID =  CY.FSYM_company_ID AND FBA.FF_FYR = CY.REPORTING_YEAR ),\n" +
                    "       \n" +
                    "    er as (select PORTFOLIO_ID, VE_ID, BVD9_NUMBER, FACTSET_ID, REPORTING_YEAR, PRODUCED_DATE, PRODUCED_YEAR, PRODUCED_MONTH, INDICATOR, NAME, METRIC_UNIT, RELATED_TO, TAXONOMY_ID, VALUE, TOTAL_CELLS, CURRENCY,   \n" +
                    "           \n" +
                    "            FR.MIDRATE * COMPANY_VALUE AS EXPOSURE_AMOUNT , FR.MIDRATE * TOTAL_VALUE TOTAL_EXPOSURE_AMOUNT,  (FR.MIDRATE * COMPANY_VALUE)/(FR.MIDRATE * TOTAL_VALUE) weight_in_portfolio, \n" +
                    "            (CASE WHEN (((FR.MIDRATE * FF_ENTRPR_VAL) + (FR.MIDRATE * FF_CASH_ST)) * 1000000) < 0 THEN NULL ELSE (((FR.MIDRATE * FF_ENTRPR_VAL) + (FR.MIDRATE * FF_CASH_ST)) * 1000000) END)  AS ENTRPR_VAL, ((FR.MIDRATE * FF_SALES) * 1000000) AS REVENUE\n" +
                    "           from ENT_VALUE EV, DF_LOOKUP.FX_RATE  FR where EV.PRODUCED_DATE = FR.EXRATEDATE AND  FR.FROMCURRCODE = EV.CURRENCY AND FR.TOCURRCODE = 'EUR'   \n" +
                    "        ),      \n" +
                    "\n" +
                    "all_columns as (SELECT ER.*, (CASE WHEN NACE_SECTION_CODE  IN ('A','B','C','D','E','F','G','H','L') then 'Y' else 'N' END) AS HIGH_IMPACT_CHECk     \n" +
                    "      FROM er \n" +
                    "LEFT OUTER JOIN FACTSET_MOODYS_DS.ENT_V1.ENT_ENTITY_COVERAGE fec ON fec.FACTSET_ENTITY_ID = ER.FACTSET_ID\n" +
                    "LEFT OUTER JOIN FACTSET_MOODYS_DS.REF_V2.NACE_CLASSIFICATION_MAP nm ON fec.NACE_CODE = nm.NACE_CODE),\n" +
                    "\n" +
                    "output as\n" +
                    "\n" +
                    "(SELECT CATEGORY, SUB_CATEGORY, SFDR_CATEGORY, SFDR_SUBCATEGORY, METRIC_TYPE, sfdr_indicator, spt.TAXONOMY_ID, spt.PORTFOLIO_ID, ROUND(impact, 2) AS IMPACT, ROUND((Scope_of_Disclosure/TOTAL_CELLS) * 100, 2)  Scope_of_Disclosure  from \n" +
                    " (select spt.*, er.PORTFOLIO_ID from DF_TARGET.SFDR_PORTFOLIO_TEMPLATE spt, (select distinct portfolio_id from er) er)  spt full outer join (\n" +
                    "  \n" +
                    "  \n" +
                    "  select PORTFOLIO_ID, INDICATOR, TAXONOMY_ID, SUM(CASE WHEN VALUE = 'NI' THEN 0 ELSE VALUE * (EXPOSURE_AMOUNT/ENTRPR_VAL)   END) as Impact, SUM(CASE WHEN VALUE = 'NI' OR VALUE IS NULL THEN 0 ELSE 1 END)  AS Scope_of_Disclosure,  TOTAL_CELLS\n" +
                    "from all_columns  where INDICATOR = 'SFDR_1' AND TAXONOMY_ID = 1  GROUP BY PORTFOLIO_ID, INDICATOR, TAXONOMY_ID,TOTAL_CELLS\n" +
                    "\n" +
                    "UNION ALL\n" +
                    "select PORTFOLIO_ID, INDICATOR, TAXONOMY_ID, SUM(CASE WHEN VALUE = 'NI' THEN 0 ELSE VALUE * (EXPOSURE_AMOUNT/ENTRPR_VAL)   END) as Impact, SUM(CASE WHEN VALUE = 'NI' OR VALUE IS NULL THEN 0 ELSE 1 END)  AS Scope_of_Disclosure, TOTAL_CELLS\n" +
                    "from all_columns  where INDICATOR = 'SFDR_1' AND TAXONOMY_ID = 2  GROUP BY PORTFOLIO_ID, INDICATOR, TAXONOMY_ID,TOTAL_CELLS\n" +
                    "\n" +
                    "UNION ALL\n" +
                    "select PORTFOLIO_ID, INDICATOR, TAXONOMY_ID, SUM(CASE WHEN VALUE = 'NI' THEN 0 ELSE VALUE * (EXPOSURE_AMOUNT/ENTRPR_VAL)   END) as Impact, SUM(CASE WHEN VALUE = 'NI' OR VALUE IS NULL THEN 0 ELSE 1 END)  AS Scope_of_Disclosure, TOTAL_CELLS\n" +
                    "from all_columns  where INDICATOR = 'SFDR_1' AND TAXONOMY_ID = 3  GROUP BY PORTFOLIO_ID, INDICATOR, TAXONOMY_ID,TOTAL_CELLS\n" +
                    "\n" +
                    "UNION ALL\n" +
                    "select A.PORTFOLIO_ID, A.INDICATOR, A.TAXONOMY_ID, SUM(A.Impact), B.Scope_of_Disclosure, B.TOTAL_CELLS FROM (select PORTFOLIO_ID, INDICATOR, 4 as TAXONOMY_ID, \n" +
                    "SUM(CASE WHEN   VALUE = 'NI' THEN 0 ELSE VALUE * (EXPOSURE_AMOUNT/ENTRPR_VAL)  END) as Impact \n" +
                    "from all_columns  where INDICATOR = 'SFDR_1' AND  TAXONOMY_ID = 4 GROUP BY PORTFOLIO_ID, INDICATOR, TAXONOMY_ID ) A, \n" +
                    "(select PORTFOLIO_ID, INDICATOR, TAXONOMY_ID, SUM(CASE WHEN VALUE = 'NI' OR VALUE IS NULL THEN 0 ELSE 1 END)  AS Scope_of_Disclosure, TOTAL_CELLS\n" +
                    "from all_columns  where INDICATOR = 'SFDR_1' AND TAXONOMY_ID = 4 GROUP BY PORTFOLIO_ID, INDICATOR, TAXONOMY_ID,TOTAL_CELLS) B WHERE a.PORTFOLIO_ID = b.PORTFOLIO_ID and a.INDICATOR = b.INDICATOR \n" +
                    "   GROUP BY A.PORTFOLIO_ID, A.INDICATOR, A.TAXONOMY_ID, B.TOTAL_CELLS, B.Scope_of_Disclosure\n" +
                    "   \n" +
                    "\n" +
                    "UNION ALL\n" +
                    "SELECT PORTFOLIO_ID, INDICATOR, TAXONOMY_ID, SUM(VALUE * EXPOSURE_AMOUNT)/SUM(EXPOSURE_AMOUNT) AS IMPACT , SUM(Scope_of_Disclosure), TOTAL_CELLS FROM   (select PORTFOLIO_ID, INDICATOR, TAXONOMY_ID, Value,  EXPOSURE_AMOUNT , SUM(EXPOSURE_AMOUNT) OVER (partition by portfolio_id) AS TOTAL_EXPOSURE_AMOUNT,  1  AS Scope_of_Disclosure ,TOTAL_CELLS\n" +
                    "from all_columns  where INDICATOR = 'SFDR_2' AND  TAXONOMY_ID = 27  AND  (VALUE <> 'NI' OR VALUE IS NULL)) GROUP BY PORTFOLIO_ID, INDICATOR, TAXONOMY_ID, TOTAL_CELLS\n" +
                    "\n" +
                    "   UNION ALL\n" +
                    "SELECT PORTFOLIO_ID, INDICATOR, TAXONOMY_ID, SUM(VALUE * EXPOSURE_AMOUNT/TOTAL_EXPOSURE_AMOUNT) AS IMPACT , SUM(Scope_of_Disclosure), TOTAL_CELLS FROM   (select PORTFOLIO_ID, INDICATOR, TAXONOMY_ID, Value,  EXPOSURE_AMOUNT , SUM(EXPOSURE_AMOUNT) OVER (partition by portfolio_id) AS TOTAL_EXPOSURE_AMOUNT,  1  AS Scope_of_Disclosure ,TOTAL_CELLS\n" +
                    "from all_columns  where INDICATOR = 'SFDR_3' AND  TAXONOMY_ID = 28  AND  (VALUE <> 'NI' OR VALUE IS NULL)) GROUP BY PORTFOLIO_ID, INDICATOR, TAXONOMY_ID, TOTAL_CELLS  \n" +
                    "   \n" +
                    " UNION ALL\n" +
                    "   \n" +
                    "   \n" +
                    "SELECT PORTFOLIO_ID, INDICATOR, TAXONOMY_ID, SUM(CASE WHEN VALUE = 'No' THEN 0 ELSE EXPOSURE_AMOUNT/TOTAL_EXPOSURE_AMOUNT END) * 100 AS IMPACT , SUM(Scope_of_Disclosure), TOTAL_CELLS FROM ( select PORTFOLIO_ID, INDICATOR, TAXONOMY_ID, Value,  EXPOSURE_AMOUNT , SUM(EXPOSURE_AMOUNT) OVER (partition by portfolio_id) AS TOTAL_EXPOSURE_AMOUNT,  1  AS Scope_of_Disclosure ,TOTAL_CELLS\n" +
                    "from all_columns  where INDICATOR = 'SFDR_4' AND  TAXONOMY_ID = 23  AND  (VALUE <> 'NI' OR VALUE IS NULL)) GROUP BY PORTFOLIO_ID, INDICATOR, TAXONOMY_ID, TOTAL_CELLS  \n" +
                    "\n" +
                    "\n" +
                    "UNION ALL\n" +
                    "   \n" +
                    "SELECT PORTFOLIO_ID, INDICATOR, TAXONOMY_ID, SUM(VALUE * EXPOSURE_AMOUNT/TOTAL_EXPOSURE_AMOUNT) * 100 AS IMPACT , SUM(Scope_of_Disclosure), TOTAL_CELLS FROM   (select PORTFOLIO_ID, INDICATOR, TAXONOMY_ID, Value,  EXPOSURE_AMOUNT , SUM(EXPOSURE_AMOUNT) OVER (partition by portfolio_id) AS TOTAL_EXPOSURE_AMOUNT,  1  AS Scope_of_Disclosure ,TOTAL_CELLS\n" +
                    "from all_columns  where INDICATOR = 'SFDR_5' AND  TAXONOMY_ID = 11  AND  (VALUE <> 'NI' OR VALUE IS NULL)) GROUP BY PORTFOLIO_ID, INDICATOR, TAXONOMY_ID, TOTAL_CELLS\n" +
                    "\n" +
                    "UNION ALL\n" +
                    "SELECT PORTFOLIO_ID, INDICATOR, TAXONOMY_ID, SUM(VALUE * EXPOSURE_AMOUNT/TOTAL_EXPOSURE_AMOUNT) * 100 AS IMPACT , SUM(Scope_of_Disclosure), TOTAL_CELLS FROM   (select PORTFOLIO_ID, INDICATOR, TAXONOMY_ID, Value,  EXPOSURE_AMOUNT , SUM(EXPOSURE_AMOUNT) OVER (partition by portfolio_id) AS TOTAL_EXPOSURE_AMOUNT,  1  AS Scope_of_Disclosure ,TOTAL_CELLS\n" +
                    "from all_columns  where INDICATOR = 'SFDR_5' AND  TAXONOMY_ID = 12  AND  (VALUE <> 'NI' OR VALUE IS NULL)) GROUP BY PORTFOLIO_ID, INDICATOR, TAXONOMY_ID, TOTAL_CELLS  \n" +
                    "   \n" +
                    "\n" +
                    "UNION ALL\n" +
                    "SELECT PORTFOLIO_ID, INDICATOR, TAXONOMY_ID, SUM(CASE WHEN HIGH_IMPACT_CHECK = 'N' THEN 0 ELSE (EXPOSURE_AMOUNT/TOTAL_EXPOSURE_AMOUNT) * VALUE END) AS IMPACT , SUM(Scope_of_Disclosure), TOTAL_CELLS FROM ( \n" +
                    "  select PORTFOLIO_ID, INDICATOR, TAXONOMY_ID, Value,  EXPOSURE_AMOUNT , SUM(EXPOSURE_AMOUNT) OVER (partition by portfolio_id) AS TOTAL_EXPOSURE_AMOUNT,  1  AS Scope_of_Disclosure ,TOTAL_CELLS, HIGH_IMPACT_CHECK\n" +
                    "from all_columns  where INDICATOR = 'SFDR_6'  AND  (VALUE <> 'NI' OR VALUE IS NULL)) GROUP BY PORTFOLIO_ID, INDICATOR, TAXONOMY_ID, TOTAL_CELLS     \n" +
                    "   \n" +
                    "   \n" +
                    "UNION ALL\n" +
                    "SELECT PORTFOLIO_ID, INDICATOR, TAXONOMY_ID, SUM((EXPOSURE_AMOUNT/TOTAL_EXPOSURE_AMOUNT) * VALUE) * 100 AS IMPACT , SUM(Scope_of_Disclosure), TOTAL_CELLS FROM ( \n" +
                    "  select PORTFOLIO_ID, INDICATOR, TAXONOMY_ID, Value,  EXPOSURE_AMOUNT , SUM(EXPOSURE_AMOUNT) OVER (partition by portfolio_id) AS TOTAL_EXPOSURE_AMOUNT,  1  AS Scope_of_Disclosure ,TOTAL_CELLS\n" +
                    "from all_columns  where INDICATOR = 'SFDR_7'  AND  (VALUE <> 'NI' OR VALUE IS NULL)) GROUP BY PORTFOLIO_ID, INDICATOR, TAXONOMY_ID, TOTAL_CELLS  \n" +
                    "   \n" +
                    "   \n" +
                    "UNION ALL\n" +
                    "SELECT PORTFOLIO_ID, INDICATOR, TAXONOMY_ID, SUM((EXPOSURE_AMOUNT/(ENTRPR_VAL/1000000)) * VALUE)/SUM(EXPOSURE_AMOUNT) AS IMPACT , SUM(Scope_of_Disclosure), TOTAL_CELLS  FROM (select PORTFOLIO_ID, INDICATOR, ENTRPR_VAL, TAXONOMY_ID, Value,  EXPOSURE_AMOUNT , SUM(EXPOSURE_AMOUNT) OVER (partition by portfolio_id) AS TOTAL_EXPOSURE_AMOUNT,  1  AS Scope_of_Disclosure ,TOTAL_CELLS\n" +
                    "from all_columns  where INDICATOR = 'SFDR_8'  AND  (VALUE <> 'NI' OR VALUE IS NULL)) GROUP BY PORTFOLIO_ID, INDICATOR, TAXONOMY_ID, TOTAL_CELLS  \n" +
                    "   \n" +
                    "  \n" +
                    "   \n" +
                    " UNION ALL\n" +
                    "SELECT PORTFOLIO_ID, INDICATOR, TAXONOMY_ID, SUM((EXPOSURE_AMOUNT/(ENTRPR_VAL/1000000)) * VALUE)/SUM(EXPOSURE_AMOUNT) AS IMPACT , SUM(Scope_of_Disclosure), TOTAL_CELLS  FROM (select PORTFOLIO_ID, INDICATOR, ENTRPR_VAL, TAXONOMY_ID, Value,  EXPOSURE_AMOUNT , SUM(EXPOSURE_AMOUNT) OVER (partition by portfolio_id) AS TOTAL_EXPOSURE_AMOUNT,  1  AS Scope_of_Disclosure ,TOTAL_CELLS\n" +
                    "from all_columns  where INDICATOR = 'SFDR_9'  AND  (VALUE <> 'NI' OR VALUE IS NULL)) GROUP BY PORTFOLIO_ID, INDICATOR, TAXONOMY_ID, TOTAL_CELLS    \n" +
                    "\n" +
                    "   \n" +
                    " UNION ALL\n" +
                    "SELECT PORTFOLIO_ID, INDICATOR, TAXONOMY_ID, SUM(CASE WHEN VALUE = 'Yes' THEN   EXPOSURE_AMOUNT/TOTAL_EXPOSURE_AMOUNT  END) * 100 AS IMPACT , SUM(Scope_of_Disclosure), TOTAL_CELLS  FROM (select PORTFOLIO_ID, INDICATOR, ENTRPR_VAL, TAXONOMY_ID, Value,  EXPOSURE_AMOUNT , SUM(EXPOSURE_AMOUNT) OVER (partition by portfolio_id) AS TOTAL_EXPOSURE_AMOUNT,  1  AS Scope_of_Disclosure ,TOTAL_CELLS\n" +
                    "from all_columns  where INDICATOR = 'SFDR_10'  AND  (VALUE <> 'NI' OR VALUE IS NULL)) GROUP BY PORTFOLIO_ID, INDICATOR, TAXONOMY_ID, TOTAL_CELLS    \n" +
                    "\n" +
                    "\n" +
                    " UNION ALL \n" +
                    "SELECT PORTFOLIO_ID, INDICATOR, TAXONOMY_ID, SUM(VALUE * EXPOSURE_AMOUNT/TOTAL_EXPOSURE_AMOUNT) * 100 AS IMPACT , SUM(Scope_of_Disclosure), TOTAL_CELLS FROM   (select PORTFOLIO_ID, INDICATOR, TAXONOMY_ID, Value,  EXPOSURE_AMOUNT , SUM(EXPOSURE_AMOUNT) OVER (partition by portfolio_id) AS TOTAL_EXPOSURE_AMOUNT,  1  AS Scope_of_Disclosure ,TOTAL_CELLS\n" +
                    "from all_columns  where INDICATOR = 'SFDR_12' AND  TAXONOMY_ID = 15  AND  (VALUE <> 'NI' OR VALUE IS NULL)) GROUP BY PORTFOLIO_ID, INDICATOR, TAXONOMY_ID, TOTAL_CELLS\n" +
                    "\n" +
                    " UNION ALL\n" +
                    "SELECT PORTFOLIO_ID, INDICATOR, TAXONOMY_ID, SUM(VALUE * EXPOSURE_AMOUNT/TOTAL_EXPOSURE_AMOUNT) * 100 AS IMPACT , SUM(Scope_of_Disclosure), TOTAL_CELLS FROM   (select PORTFOLIO_ID, INDICATOR, TAXONOMY_ID, Value,  EXPOSURE_AMOUNT , SUM(EXPOSURE_AMOUNT) OVER (partition by portfolio_id) AS TOTAL_EXPOSURE_AMOUNT,  1  AS Scope_of_Disclosure ,TOTAL_CELLS\n" +
                    "from all_columns  where INDICATOR = 'SFDR_12' AND  TAXONOMY_ID = 16  AND  (VALUE <> 'NI' OR VALUE IS NULL)) GROUP BY PORTFOLIO_ID, INDICATOR, TAXONOMY_ID, TOTAL_CELLS  \n" +
                    "     \n" +
                    " \n" +
                    "        UNION ALL\n" +
                    "SELECT PORTFOLIO_ID, INDICATOR, 20 as TAXONOMY_ID, SUM((VALUE/(1-VALUE)) * EXPOSURE_AMOUNT/TOTAL_EXPOSURE_AMOUNT) * 100 AS IMPACT , SUM(Scope_of_Disclosure), TOTAL_CELLS FROM   (select PORTFOLIO_ID, INDICATOR, TAXONOMY_ID, Value,  EXPOSURE_AMOUNT , SUM(EXPOSURE_AMOUNT) OVER (partition by portfolio_id) AS TOTAL_EXPOSURE_AMOUNT,  1  AS Scope_of_Disclosure ,TOTAL_CELLS\n" +
                    "from all_columns  where INDICATOR = 'SFDR_13' AND  TAXONOMY_ID = 19  AND  (VALUE <> 'NI' OR VALUE IS NULL)) GROUP BY PORTFOLIO_ID, INDICATOR, TAXONOMY_ID, TOTAL_CELLS  \n" +
                    "   \n" +
                    "\n" +
                    "    UNION ALL\n" +
                    "SELECT PORTFOLIO_ID, INDICATOR, 21 as TAXONOMY_ID, SUM(VALUE * EXPOSURE_AMOUNT/TOTAL_EXPOSURE_AMOUNT) * 100 AS IMPACT , SUM(Scope_of_Disclosure), TOTAL_CELLS FROM   (select PORTFOLIO_ID, INDICATOR, TAXONOMY_ID, Value,  EXPOSURE_AMOUNT , SUM(EXPOSURE_AMOUNT) OVER (partition by portfolio_id) AS TOTAL_EXPOSURE_AMOUNT,  1  AS Scope_of_Disclosure ,TOTAL_CELLS\n" +
                    "from all_columns  where INDICATOR = 'SFDR_13' AND  TAXONOMY_ID = 19  AND  (VALUE <> 'NI' OR VALUE IS NULL)) GROUP BY PORTFOLIO_ID, INDICATOR, TAXONOMY_ID, TOTAL_CELLS  \n" +
                    "   \n" +
                    "   \n" +
                    " UNION ALL\n" +
                    "SELECT PORTFOLIO_ID, INDICATOR, TAXONOMY_ID, SUM(CASE WHEN VALUE = 'Yes' THEN   EXPOSURE_AMOUNT/TOTAL_EXPOSURE_AMOUNT  END) * 100 AS IMPACT , SUM(Scope_of_Disclosure), TOTAL_CELLS  FROM (select PORTFOLIO_ID, INDICATOR, ENTRPR_VAL, TAXONOMY_ID, Value,  EXPOSURE_AMOUNT , SUM(EXPOSURE_AMOUNT) OVER (partition by portfolio_id) AS TOTAL_EXPOSURE_AMOUNT,  1  AS Scope_of_Disclosure ,TOTAL_CELLS\n" +
                    "from all_columns  where INDICATOR = 'SFDR_14'  AND  (VALUE <> 'NI' OR VALUE IS NULL)) GROUP BY PORTFOLIO_ID, INDICATOR, TAXONOMY_ID, TOTAL_CELLS    \n" +
                    "   \n" +
                    "UNION ALL\n" +
                    "SELECT PORTFOLIO_ID, INDICATOR, TAXONOMY_ID, SUM(VALUE * EXPOSURE_AMOUNT/TOTAL_EXPOSURE_AMOUNT  ) * 100 AS IMPACT , SUM(Scope_of_Disclosure), TOTAL_CELLS  FROM (select PORTFOLIO_ID, INDICATOR, ENTRPR_VAL, TAXONOMY_ID, Value,  EXPOSURE_AMOUNT , SUM(EXPOSURE_AMOUNT) OVER (partition by portfolio_id) AS TOTAL_EXPOSURE_AMOUNT,  1  AS Scope_of_Disclosure ,TOTAL_CELLS\n" +
                    "from all_columns  where INDICATOR = 'SFDR_17'  AND  (VALUE <> 'NI' OR VALUE IS NULL)) GROUP BY PORTFOLIO_ID, INDICATOR, TAXONOMY_ID, TOTAL_CELLS   \n" +
                    "\n" +
                    "\n" +
                    ") calc  on spt.PORTFOLIO_ID = calc.PORTFOLIO_ID and spt.sfdr_indicator = calc.indicator  and spt.TAXONOMY_ID = calc.TAXONOMY_ID \n" +
                    " order by PORTFOLIO_ID,TO_NUMBER(SUBSTRING(TRIM(spt.SFDR_INDICATOR),  6, 2))  ASC , spt.TAXONOMY_ID asc ),\n" +
                    " \n" +
                    " FINAL_OUTPUT AS\n" +
                    " (SELECT * FROM OUTPUT\n" +
                    " UNION ALL\n" +
                    " SELECT CATEGORY, SUB_CATEGORY, SFDR_CATEGORY, SFDR_SUBCATEGORY, METRIC_TYPE, SFDR_INDICATOR, TAXONOMY_ID, 'Average Impact Q1-Q2-Q3-Q4' AS PORTFOLIO_ID, SUM(IMPACT)/4   , AVG(SCOPE_OF_DISCLOSURE) FROM OUTPUT\n" +
                    " GROUP BY CATEGORY, SUB_CATEGORY, SFDR_CATEGORY, SFDR_SUBCATEGORY, METRIC_TYPE, SFDR_INDICATOR, TAXONOMY_ID, 'Average Impact Q1-Q2-Q3-Q4'  )\n" +
                    " \n" +
                    " \n" +
                    "     SELECT * FROM FINAL_OUTPUT";
        }
        //System.out.println("query = " + query);
        return getQueryResultMap(query);
    }
}